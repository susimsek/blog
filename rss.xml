<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title><![CDATA[≈ûuayb ≈ûim≈üek's Blog]]></title>
    <description><![CDATA[A blog about backend, fullstack development, and DevOps (English)]]></description>
    <link>https://susimsek.github.io/blog</link>
    <language>en</language>
    <copyright>All rights reserved 2024, ≈ûuayb ≈ûim≈üek Blog</copyright>
    <lastBuildDate>Wed, 11 Dec 2024 12:00:00 GMT</lastBuildDate>

    <item>
      <title><![CDATA[Building a REST API with Spring Boot]]></title>
      <link>https://susimsek.github.io/blog/building-a-rest-api-with-spring-boot</link>
      <guid>https://susimsek.github.io/blog/building-a-rest-api-with-spring-boot</guid>
      <description><![CDATA[Learn how to create a REST API using Spring Boot. Includes HTTP methods, JSON handling, Lombok integration, and curl for testing.]]></description>
      <pubDate>Wed, 11 Dec 2024 12:00:00 GMT</pubDate>
      <category><![CDATA[Java]]></category>
      <category><![CDATA[Kotlin]]></category>
      <category><![CDATA[Spring Boot]]></category>
      <category><![CDATA[REST API]]></category>
      <category><![CDATA[Programming]]></category>
      <enclosure url="https://susimsek.github.io/blog/images/spring-boot-rest-api-thumbnail.jpg" type="image/jpeg"/>
      <content:encoded><![CDATA[<p>Spring Boot is an excellent tool for quickly developing RESTful web services. In this article, we‚Äôll walk through creating a REST API step by step using Spring Boot.</p>
<hr>
<h2>üåü What is a REST API?</h2>
<p>REST (Representational State Transfer) is an architectural style for designing web services. It uses standard HTTP methods for communication between clients and servers.</p>
<h3><strong>HTTP Methods</strong></h3>






























<table class="table table-striped table-bordered"><thead><tr><th><strong>Method</strong></th><th><strong>Description</strong></th><th><strong>Example Endpoint</strong></th></tr></thead><tbody><tr><td><strong>GET</strong></td><td>Retrieves a resource.</td><td><code node="[object Object]">/api/todos</code></td></tr><tr><td><strong>POST</strong></td><td>Creates a new resource.</td><td><code node="[object Object]">/api/todos</code></td></tr><tr><td><strong>PUT</strong></td><td>Updates or creates a resource.</td><td><code node="[object Object]">/api/todos/1</code></td></tr><tr><td><strong>DELETE</strong></td><td>Deletes a resource.</td><td><code node="[object Object]">/api/todos/1</code></td></tr></tbody></table>
<hr>
<h2>üõ†Ô∏è Step 1: Create a Project</h2>
<p>You can create a Spring Boot project using <a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer" class="text-decoration-none text-primary">Spring Initializr</a>. Select the following settings:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>Project:</strong> Maven</li>
<li class="list-group-item"><strong>Language:</strong> Java or Kotlin</li>
<li class="list-group-item"><strong>Spring Boot Version:</strong> 3.0.0+</li>
<li class="list-group-item"><strong>Dependencies:</strong> Spring Web, Spring Boot DevTools, Lombok</li>
</ul>
<p>Download the project, open it in your IDE, and get ready to run it.</p>
<hr>
<h2>üìñ Step 2: Create a Model Class</h2>
<p>Create a model class for a <code node="[object Object]">Todo</code> object:</p><ul class="mb-3 nav nav-tabs" role="tablist"><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r5:-tab-tab-0" role="tab" data-rr-ui-event-key="tab-0" aria-controls="react-aria8449685738-:r5:-tabpane-tab-0" aria-selected="true" class="nav-link active"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><path fill="var(--svg-java-primary, #0074BD)" d="M47.617 98.12s-4.767 2.774 3.397 3.71c9.892 1.13 14.947.968 25.845-1.092 0 0 2.871 1.795 6.873 3.351-24.439 10.47-55.308-.607-36.115-5.969m-2.988-13.665s-5.348 3.959 2.823 4.805c10.567 1.091 18.91 1.18 33.354-1.6 0 0 1.993 2.025 5.132 3.131-29.542 8.64-62.446.68-41.309-6.336"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M69.802 61.271c6.025 6.935-1.58 13.17-1.58 13.17s15.289-7.891 8.269-17.777c-6.559-9.215-11.587-13.792 15.635-29.58 0 .001-42.731 10.67-22.324 34.187"></path><path fill="var(--svg-java-primary, #0074BD)" d="M102.123 108.229s3.529 2.91-3.888 5.159c-14.102 4.272-58.706 5.56-71.094.171-4.451-1.938 3.899-4.625 6.526-5.192 2.739-.593 4.303-.485 4.303-.485-4.953-3.487-32.013 6.85-13.743 9.815 49.821 8.076 90.817-3.637 77.896-9.468M49.912 70.294s-22.686 5.389-8.033 7.348c6.188.828 18.518.638 30.011-.326 9.39-.789 18.813-2.474 18.813-2.474s-3.308 1.419-5.704 3.053c-23.042 6.061-67.544 3.238-54.731-2.958 10.832-5.239 19.644-4.643 19.644-4.643m40.697 22.747c23.421-12.167 12.591-23.86 5.032-22.285-1.848.385-2.677.72-2.677.72s.688-1.079 2-1.543c14.953-5.255 26.451 15.503-4.823 23.725 0-.002.359-.327.468-.617"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M76.491 1.587S89.459 14.563 64.188 34.51c-20.266 16.006-4.621 25.13-.007 35.559-11.831-10.673-20.509-20.07-14.688-28.815C58.041 28.42 81.722 22.195 76.491 1.587"></path><path fill="var(--svg-java-primary, #0074BD)" d="M52.214 126.021c22.476 1.437 57-.8 57.817-11.436 0 0-1.571 4.032-18.577 7.231-19.186 3.612-42.854 3.191-56.887.874 0 .001 2.875 2.381 17.647 3.331"></path></svg>Java</span></button></li><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r5:-tab-tab-1" role="tab" data-rr-ui-event-key="tab-1" aria-controls="react-aria8449685738-:r5:-tabpane-tab-1" aria-selected="false" tabindex="-1" class="nav-link"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><defs><linearGradient id="kotlin_svg__a" x1="-11.899" x2="40.299" y1="48.694" y2="-8.322" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-a1, #1c93c1)"></stop><stop offset="0.163" stop-color="var(--svg-kotlin-a2, #2391c0)"></stop><stop offset="0.404" stop-color="var(--svg-kotlin-a3, #378bbe)"></stop><stop offset="0.696" stop-color="var(--svg-kotlin-a4, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-a5, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__b" x1="43.553" x2="95.988" y1="149.174" y2="94.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-b1, #1c93c1)"></stop><stop offset="0.216" stop-color="var(--svg-kotlin-b2, #2d8ebf)"></stop><stop offset="0.64" stop-color="var(--svg-kotlin-b3, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-b4, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__c" x1="3.24" x2="92.481" y1="95.249" y2="2.116" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-c1, #c757a7)"></stop><stop offset="0.046" stop-color="var(--svg-kotlin-c2, #ca5a9e)"></stop><stop offset="0.241" stop-color="var(--svg-kotlin-c3, #d66779)"></stop><stop offset="0.428" stop-color="var(--svg-kotlin-c4, #e17357)"></stop><stop offset="0.6" stop-color="var(--svg-kotlin-c5, #e97c3a)"></stop><stop offset="0.756" stop-color="var(--svg-kotlin-c6, #ef8324)"></stop><stop offset="0.888" stop-color="var(--svg-kotlin-c7, #f28817)"></stop><stop offset="0.982" stop-color="var(--svg-kotlin-c8, #f48912)"></stop></linearGradient></defs><path fill="url(#kotlin_svg__a)" d="M0 0h65.4L0 64.4z"></path><path fill="url(#kotlin_svg__b)" d="M128 128 64.6 62.6 0 128z"></path><path fill="url(#kotlin_svg__c)" d="M0 128 128 0H64.6L0 63.7z"></path></svg>Kotlin</span></button></li></ul><div class="tab-content"><div role="tabpanel" id="react-aria8449685738-:r5:-tabpane-tab-0" aria-labelledby="react-aria8449685738-:r5:-tab-tab-0" class="fade tab-pane active show"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">model</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">lombok</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">Data</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Data</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">String</span><span> title</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">boolean</span><span> completed</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div><div role="tabpanel" id="react-aria8449685738-:r5:-tabpane-tab-1" aria-labelledby="react-aria8449685738-:r5:-tab-tab-1" class="fade tab-pane"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>model
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">data</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">Todo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> title</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> String</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> completed</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Boolean
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div></div><hr>
<h2>üìò Step 3: Create a Controller Class</h2>
<p>Add a <code node="[object Object]">TodoController</code> class to define CRUD operations as REST endpoints:</p><ul class="mb-3 nav nav-tabs" role="tablist"><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r7:-tab-tab-0" role="tab" data-rr-ui-event-key="tab-0" aria-controls="react-aria8449685738-:r7:-tabpane-tab-0" aria-selected="true" class="nav-link active"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><path fill="var(--svg-java-primary, #0074BD)" d="M47.617 98.12s-4.767 2.774 3.397 3.71c9.892 1.13 14.947.968 25.845-1.092 0 0 2.871 1.795 6.873 3.351-24.439 10.47-55.308-.607-36.115-5.969m-2.988-13.665s-5.348 3.959 2.823 4.805c10.567 1.091 18.91 1.18 33.354-1.6 0 0 1.993 2.025 5.132 3.131-29.542 8.64-62.446.68-41.309-6.336"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M69.802 61.271c6.025 6.935-1.58 13.17-1.58 13.17s15.289-7.891 8.269-17.777c-6.559-9.215-11.587-13.792 15.635-29.58 0 .001-42.731 10.67-22.324 34.187"></path><path fill="var(--svg-java-primary, #0074BD)" d="M102.123 108.229s3.529 2.91-3.888 5.159c-14.102 4.272-58.706 5.56-71.094.171-4.451-1.938 3.899-4.625 6.526-5.192 2.739-.593 4.303-.485 4.303-.485-4.953-3.487-32.013 6.85-13.743 9.815 49.821 8.076 90.817-3.637 77.896-9.468M49.912 70.294s-22.686 5.389-8.033 7.348c6.188.828 18.518.638 30.011-.326 9.39-.789 18.813-2.474 18.813-2.474s-3.308 1.419-5.704 3.053c-23.042 6.061-67.544 3.238-54.731-2.958 10.832-5.239 19.644-4.643 19.644-4.643m40.697 22.747c23.421-12.167 12.591-23.86 5.032-22.285-1.848.385-2.677.72-2.677.72s.688-1.079 2-1.543c14.953-5.255 26.451 15.503-4.823 23.725 0-.002.359-.327.468-.617"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M76.491 1.587S89.459 14.563 64.188 34.51c-20.266 16.006-4.621 25.13-.007 35.559-11.831-10.673-20.509-20.07-14.688-28.815C58.041 28.42 81.722 22.195 76.491 1.587"></path><path fill="var(--svg-java-primary, #0074BD)" d="M52.214 126.021c22.476 1.437 57-.8 57.817-11.436 0 0-1.571 4.032-18.577 7.231-19.186 3.612-42.854 3.191-56.887.874 0 .001 2.875 2.381 17.647 3.331"></path></svg>Java</span></button></li><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r7:-tab-tab-1" role="tab" data-rr-ui-event-key="tab-1" aria-controls="react-aria8449685738-:r7:-tabpane-tab-1" aria-selected="false" tabindex="-1" class="nav-link"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><defs><linearGradient id="kotlin_svg__a" x1="-11.899" x2="40.299" y1="48.694" y2="-8.322" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-a1, #1c93c1)"></stop><stop offset="0.163" stop-color="var(--svg-kotlin-a2, #2391c0)"></stop><stop offset="0.404" stop-color="var(--svg-kotlin-a3, #378bbe)"></stop><stop offset="0.696" stop-color="var(--svg-kotlin-a4, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-a5, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__b" x1="43.553" x2="95.988" y1="149.174" y2="94.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-b1, #1c93c1)"></stop><stop offset="0.216" stop-color="var(--svg-kotlin-b2, #2d8ebf)"></stop><stop offset="0.64" stop-color="var(--svg-kotlin-b3, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-b4, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__c" x1="3.24" x2="92.481" y1="95.249" y2="2.116" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-c1, #c757a7)"></stop><stop offset="0.046" stop-color="var(--svg-kotlin-c2, #ca5a9e)"></stop><stop offset="0.241" stop-color="var(--svg-kotlin-c3, #d66779)"></stop><stop offset="0.428" stop-color="var(--svg-kotlin-c4, #e17357)"></stop><stop offset="0.6" stop-color="var(--svg-kotlin-c5, #e97c3a)"></stop><stop offset="0.756" stop-color="var(--svg-kotlin-c6, #ef8324)"></stop><stop offset="0.888" stop-color="var(--svg-kotlin-c7, #f28817)"></stop><stop offset="0.982" stop-color="var(--svg-kotlin-c8, #f48912)"></stop></linearGradient></defs><path fill="url(#kotlin_svg__a)" d="M0 0h65.4L0 64.4z"></path><path fill="url(#kotlin_svg__b)" d="M128 128 64.6 62.6 0 128z"></path><path fill="url(#kotlin_svg__c)" d="M0 128 128 0H64.6L0 63.7z"></path></svg>Kotlin</span></button></li></ul><div class="tab-content"><div role="tabpanel" id="react-aria8449685738-:r7:-tabpane-tab-0" aria-labelledby="react-aria8449685738-:r7:-tab-tab-0" class="fade tab-pane active show"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">controller</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">model</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">web</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">bind</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">annotation</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">java</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">util</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">ArrayList</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">java</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">util</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RestController</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/api/todos"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">TodoController</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(97, 130, 184);">Todo</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span> todos </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">new</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">ArrayList</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GetMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(97, 130, 184);">Todo</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getAllTodos</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todos</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PostMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">setId</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(124, 77, 255);">long</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">size</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">+</span><span> </span><span class="token token" style="color: rgb(247, 109, 71);">1</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">add</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PutMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">updateTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> todo </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">stream</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">filter</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>t </span><span class="token token" style="color: rgb(57, 173, 181);">-&gt;</span><span> t</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">getId</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">equals</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>id</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">findFirst</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">orElse</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(124, 77, 255);">null</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">if</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo </span><span class="token token" style="color: rgb(57, 173, 181);">!=</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">null</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>            todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">setTitle</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">getTitle</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>            todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">setCompleted</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">isCompleted</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@DeleteMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">void</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">deleteTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">removeIf</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo </span><span class="token token" style="color: rgb(57, 173, 181);">-&gt;</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">getId</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">equals</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>id</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div><div role="tabpanel" id="react-aria8449685738-:r7:-tabpane-tab-1" aria-labelledby="react-aria8449685738-:r7:-tab-tab-1" class="fade tab-pane"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>controller
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>model</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Todo
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>web</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>bind</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>annotation</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RestController</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/api/todos"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> TodoController </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">val</span><span> todos </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> mutableListOf</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span>Todo</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GetMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getAllTodos</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> List</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span>Todo</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> todos
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PostMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>id </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>size </span><span class="token token" style="color: rgb(57, 173, 181);">+</span><span> </span><span class="token token" style="color: rgb(247, 109, 71);">1</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">toLong</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">add</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PutMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">updateTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo</span><span class="token token" style="color: rgb(57, 173, 181);">?</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">val</span><span> todo </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">find</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span> it</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>id </span><span class="token token" style="color: rgb(57, 173, 181);">==</span><span> id </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>        todo</span><span class="token token" style="color: rgb(57, 173, 181);">?</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">apply</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>            title </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>title
</span><span>            completed </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>completed
</span><span>        </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@DeleteMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">deleteTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">removeIf</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span> it</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>id </span><span class="token token" style="color: rgb(57, 173, 181);">==</span><span> id </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div></div><hr>
<h2>‚ñ∂Ô∏è Step 4: Test the API</h2>
<p>Test your API using <code node="[object Object]">curl</code> commands:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>GET All Todos:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X GET http://localhost:8080/api/todos</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>POST New Todo:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X POST http://localhost:8080/api/todos -H </span><span class="token token" style="color: rgb(246, 164, 52);">"Content-Type: application/json"</span><span> -d </span><span class="token token" style="color: rgb(246, 164, 52);">'{"title": "New Todo", "completed": false}'</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>PUT Update Todo:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X PUT http://localhost:8080/api/todos/1 -H </span><span class="token token" style="color: rgb(246, 164, 52);">"Content-Type: application/json"</span><span> -d </span><span class="token token" style="color: rgb(246, 164, 52);">'{"title": "Updated Todo", "completed": true}'</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>DELETE Delete Todo:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X DELETE http://localhost:8080/api/todos/1</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<p>By following these steps, you‚Äôll have built a REST API with Spring Boot.</p>]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[Gin - First Application]]></title>
      <link>https://susimsek.github.io/blog/golang-gin-first-application</link>
      <guid>https://susimsek.github.io/blog/golang-gin-first-application</guid>
      <description><![CDATA[A beginner-friendly guide to creating your first Golang Gin application from scratch. Learn the basics and start your journey with Gin.]]></description>
      <pubDate>Thu, 14 Dec 2024 12:00:00 GMT</pubDate>
      <category><![CDATA[Go]]></category>
      <category><![CDATA[Gin]]></category>
      <category><![CDATA[Beginner Guide]]></category>
      <category><![CDATA[Programming]]></category>
      <enclosure url="https://susimsek.github.io/blog/images/golang-gin-first-app-thumbnail.jpg" type="image/jpeg" />
      <content:encoded><![CDATA[<p>Gin simplifies the process of building high-performance web applications with Golang. In this guide, we‚Äôll walk through creating your first Gin application step by step.</p>
<hr>
<h2>üåü Prerequisites</h2>
<p>üìã Before starting, ensure you have the following:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item">üîß <strong>Golang</strong> 1.17+ installed</li>
<li class="list-group-item">üóç <strong>A text editor or IDE</strong> (e.g., Visual Studio Code, GoLand, or Vim)</li>
</ul>
<hr>
<h2>üõ†Ô∏è Step 1: Set Up Your Gin Project</h2>
<p>You can set up your first Gin project by following these steps:</p>
<ol class="list-group list-group-numbered">
<li class="list-group-item"><strong>Initialize a Go Module</strong></li>
</ol>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">mkdir</span><span> gin-first-app
</span><span></span><span class="token token" style="color: rgb(97, 130, 184);">cd</span><span> gin-first-app
</span>go mod init gin-first-app</code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ol class="list-group list-group-numbered">
<li class="list-group-item"><strong>Install Gin</strong></li>
</ol>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>go get -u github.com/gin-gonic/gin</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<h2>üìñ Step 2: Writing Your First Endpoint</h2>
<p>Let‚Äôs write a simple endpoint to say hello:</p>
<p>Create a file named <code node="[object Object]">main.go</code> with the following content:</p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-go" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> main
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>	</span><span class="token token" style="color: rgb(246, 164, 52);">"github.com/gin-gonic/gin"</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">main</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	r </span><span class="token token" style="color: rgb(57, 173, 181);">:=</span><span> gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Default</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">GET</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/hello"</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>c </span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Context</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>		c</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">JSON</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(247, 109, 71);">200</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>H</span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>			</span><span class="token token" style="color: rgb(246, 164, 52);">"message"</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">"Hello, Gin!"</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span><span>		</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Run</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(170, 191, 201);">// Listen and serve on 0.0.0.0:8080</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<h2>‚ñ∂Ô∏è Step 3: Run the Application</h2>
<ol class="list-group list-group-numbered">
<li class="list-group-item">Open a terminal in the project folder.</li>
<li class="list-group-item">Execute the following command to run your application:</li>
</ol>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>go run main.go</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ol class="list-group list-group-numbered">
<li class="list-group-item">Access the endpoint at:
<pre><code node="[object Object]">http://localhost:8080/hello
</code></pre>
</li>
</ol>
<p><strong>Response:</strong></p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-json" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">"message"</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">"Hello, Gin!"</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<p>This post covers the basics of creating a Gin project, writing an endpoint, and running it successfully.</p>]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[Object-Relational Mapping (ORM)]]></title>
      <link>https://susimsek.github.io/blog/object-relational-mapping</link>
      <guid>https://susimsek.github.io/blog/object-relational-mapping</guid>
      <description><![CDATA[Learn how to set up an ORM-based application with Spring Boot using Java, Kotlin, and Go (Gin). Includes PostgreSQL integration and basic CRUD operations.]]></description>
      <pubDate>Mon, 16 Dec 2024 12:00:00 GMT</pubDate>
      <category><![CDATA[Java]]></category>
      <category><![CDATA[Kotlin]]></category>
      <category><![CDATA[Go]]></category>
      <category><![CDATA[Spring Boot]]></category>
      <category><![CDATA[Gin]]></category>
      <category><![CDATA[ORM]]></category>
      <category><![CDATA[Programming]]></category>
      <enclosure url="https://susimsek.github.io/blog/images/orm-thumbnail.jpg" type="image/jpeg" />
      <content:encoded><![CDATA[<p>Object-Relational Mapping (ORM) simplifies database operations in modern applications. This guide will show you how to set up ORM with PostgreSQL using Spring Boot and the Gin framework.</p>
<hr>
<h2>üåü Why Use ORM?</h2>
<p>ORM bridges the gap between object-oriented programming and relational databases by mapping objects directly to database tables. This eliminates the need for manual SQL queries, reducing errors and increasing productivity for developers.</p>
<hr>
<h2>üåü Prerequisites</h2>
<p>üìã Ensure you have the following:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item">‚òï <strong>Java Development Kit (JDK)</strong> 17+</li>
<li class="list-group-item">üì¶ <strong>Maven or Gradle</strong> installed</li>
<li class="list-group-item">üñ•Ô∏è A <strong>Java IDE</strong></li>
<li class="list-group-item">üêò <strong>PostgreSQL</strong> installed and running</li>
</ul>
<p>For <strong>Go</strong>:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item">üîß <strong>Golang</strong> 1.17+ installed</li>
<li class="list-group-item">üîÑ <strong>go.mod</strong> initialized in your project</li>
</ul>
<hr>
<h2>üõ†Ô∏è Step 1: Add Dependencies</h2>
<p>To set up a Spring Boot project and integrate ORM, follow these steps:</p>
<h3>Add Dependencies</h3>
<p>For Spring Boot projects, include the following dependencies in your project:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>Maven:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-xml" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token" style="color: rgb(229, 57, 53);">dependency</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token" style="color: rgb(229, 57, 53);">groupId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>org.springframework.boot</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;/</span><span class="token token" style="color: rgb(229, 57, 53);">groupId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token" style="color: rgb(229, 57, 53);">artifactId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>spring-boot-starter-data-jpa</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;/</span><span class="token token" style="color: rgb(229, 57, 53);">artifactId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">&lt;/</span><span class="token token" style="color: rgb(229, 57, 53);">dependency</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token" style="color: rgb(229, 57, 53);">dependency</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token" style="color: rgb(229, 57, 53);">groupId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>org.postgresql</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;/</span><span class="token token" style="color: rgb(229, 57, 53);">groupId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token" style="color: rgb(229, 57, 53);">artifactId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>postgresql</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;/</span><span class="token token" style="color: rgb(229, 57, 53);">artifactId</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">&lt;/</span><span class="token token" style="color: rgb(229, 57, 53);">dependency</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>Gradle:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-groovy" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>implementation </span><span class="token token" style="color: rgb(246, 164, 52);">'org.springframework.boot:spring-boot-starter-data-jpa'</span><span>
</span><span>implementation </span><span class="token token" style="color: rgb(246, 164, 52);">'org.postgresql:postgresql'</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>Configure the Database</h3>
<p>Set up your PostgreSQL connection in the <code node="[object Object]">application.properties</code> or <code node="[object Object]">application.yml</code> file:</p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-properties" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(57, 173, 181);">spring.datasource.url</span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span class="token token" style="color: rgb(246, 164, 52);">jdbc:postgresql://localhost:5432/demo</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">spring.datasource.username</span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span class="token token" style="color: rgb(246, 164, 52);">your_username</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">spring.datasource.password</span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span class="token token" style="color: rgb(246, 164, 52);">your_password</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">spring.jpa.hibernate.ddl-auto</span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span class="token token" style="color: rgb(246, 164, 52);">update</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>Initialize the Project</h3>
<p>If you haven't already, create your Spring Boot project using <a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer" class="text-decoration-none text-primary">Spring Initializr</a>:</p>
<ol class="list-group list-group-numbered">
<li class="list-group-item">Choose <strong>Spring Web</strong>, <strong>Spring Data JPA</strong>, and <strong>PostgreSQL Driver</strong> as dependencies.</li>
<li class="list-group-item">Download the project and import it into your preferred IDE.</li>
</ol>
<p>For Go projects:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>Install Gin Framework and GORM:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(170, 191, 201);"># Install the Gin framework</span><span>
</span>go get -u github.com/gin-gonic/gin

<span></span><span class="token token" style="color: rgb(170, 191, 201);"># Install the GORM PostgreSQL driver</span><span>
</span>go get -u gorm.io/driver/postgres

<span></span><span class="token token" style="color: rgb(170, 191, 201);"># Install the GORM ORM library</span><span>
</span>go get -u gorm.io/gorm</code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<h2>üìã Step 2: Define the Model and Implement the REST Controller</h2>
<p>This step combines creating the entity/model, repository, and REST controllers.</p><ul class="mb-3 nav nav-tabs" role="tablist"><li class="nav-item" role="presentation"><button type="button" id="react-aria2340256199-:rj:-tab-tab-0" role="tab" data-rr-ui-event-key="tab-0" aria-controls="react-aria2340256199-:rj:-tabpane-tab-0" aria-selected="true" class="nav-link active"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><path fill="var(--svg-java-primary, #0074BD)" d="M47.617 98.12s-4.767 2.774 3.397 3.71c9.892 1.13 14.947.968 25.845-1.092 0 0 2.871 1.795 6.873 3.351-24.439 10.47-55.308-.607-36.115-5.969m-2.988-13.665s-5.348 3.959 2.823 4.805c10.567 1.091 18.91 1.18 33.354-1.6 0 0 1.993 2.025 5.132 3.131-29.542 8.64-62.446.68-41.309-6.336"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M69.802 61.271c6.025 6.935-1.58 13.17-1.58 13.17s15.289-7.891 8.269-17.777c-6.559-9.215-11.587-13.792 15.635-29.58 0 .001-42.731 10.67-22.324 34.187"></path><path fill="var(--svg-java-primary, #0074BD)" d="M102.123 108.229s3.529 2.91-3.888 5.159c-14.102 4.272-58.706 5.56-71.094.171-4.451-1.938 3.899-4.625 6.526-5.192 2.739-.593 4.303-.485 4.303-.485-4.953-3.487-32.013 6.85-13.743 9.815 49.821 8.076 90.817-3.637 77.896-9.468M49.912 70.294s-22.686 5.389-8.033 7.348c6.188.828 18.518.638 30.011-.326 9.39-.789 18.813-2.474 18.813-2.474s-3.308 1.419-5.704 3.053c-23.042 6.061-67.544 3.238-54.731-2.958 10.832-5.239 19.644-4.643 19.644-4.643m40.697 22.747c23.421-12.167 12.591-23.86 5.032-22.285-1.848.385-2.677.72-2.677.72s.688-1.079 2-1.543c14.953-5.255 26.451 15.503-4.823 23.725 0-.002.359-.327.468-.617"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M76.491 1.587S89.459 14.563 64.188 34.51c-20.266 16.006-4.621 25.13-.007 35.559-11.831-10.673-20.509-20.07-14.688-28.815C58.041 28.42 81.722 22.195 76.491 1.587"></path><path fill="var(--svg-java-primary, #0074BD)" d="M52.214 126.021c22.476 1.437 57-.8 57.817-11.436 0 0-1.571 4.032-18.577 7.231-19.186 3.612-42.854 3.191-56.887.874 0 .001 2.875 2.381 17.647 3.331"></path></svg>Java</span></button></li><li class="nav-item" role="presentation"><button type="button" id="react-aria2340256199-:rj:-tab-tab-1" role="tab" data-rr-ui-event-key="tab-1" aria-controls="react-aria2340256199-:rj:-tabpane-tab-1" aria-selected="false" tabindex="-1" class="nav-link"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><defs><linearGradient id="kotlin_svg__a" x1="-11.899" x2="40.299" y1="48.694" y2="-8.322" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-a1, #1c93c1)"></stop><stop offset="0.163" stop-color="var(--svg-kotlin-a2, #2391c0)"></stop><stop offset="0.404" stop-color="var(--svg-kotlin-a3, #378bbe)"></stop><stop offset="0.696" stop-color="var(--svg-kotlin-a4, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-a5, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__b" x1="43.553" x2="95.988" y1="149.174" y2="94.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-b1, #1c93c1)"></stop><stop offset="0.216" stop-color="var(--svg-kotlin-b2, #2d8ebf)"></stop><stop offset="0.64" stop-color="var(--svg-kotlin-b3, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-b4, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__c" x1="3.24" x2="92.481" y1="95.249" y2="2.116" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-c1, #c757a7)"></stop><stop offset="0.046" stop-color="var(--svg-kotlin-c2, #ca5a9e)"></stop><stop offset="0.241" stop-color="var(--svg-kotlin-c3, #d66779)"></stop><stop offset="0.428" stop-color="var(--svg-kotlin-c4, #e17357)"></stop><stop offset="0.6" stop-color="var(--svg-kotlin-c5, #e97c3a)"></stop><stop offset="0.756" stop-color="var(--svg-kotlin-c6, #ef8324)"></stop><stop offset="0.888" stop-color="var(--svg-kotlin-c7, #f28817)"></stop><stop offset="0.982" stop-color="var(--svg-kotlin-c8, #f48912)"></stop></linearGradient></defs><path fill="url(#kotlin_svg__a)" d="M0 0h65.4L0 64.4z"></path><path fill="url(#kotlin_svg__b)" d="M128 128 64.6 62.6 0 128z"></path><path fill="url(#kotlin_svg__c)" d="M0 128 128 0H64.6L0 63.7z"></path></svg>Kotlin</span></button></li><li class="nav-item" role="presentation"><button type="button" id="react-aria2340256199-:rj:-tab-tab-2" role="tab" data-rr-ui-event-key="tab-2" aria-controls="react-aria2340256199-:rj:-tabpane-tab-2" aria-selected="false" tabindex="-1" class="nav-link"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid" viewBox="-46 0 348 348" style="height: 20px; margin-right: 8px;"><path fill="var(--svg-golang-primary, #F6D2A2)" d="M3.686 188.165c.498 10.26 10.758 5.479 15.34 2.291 4.383-3.088 5.678-.498 6.076-6.475.299-3.984.697-7.869.498-11.853-6.674-.598-13.846.996-19.325 4.98-2.888 1.992-8.068 8.567-2.59 11.057M208.187 314.272c7.869 4.881 22.313 19.624 10.459 26.796-11.356 10.36-17.73-11.456-27.692-14.444 4.283-5.877 9.662-11.256 17.233-12.352M67.337 330.907c-9.264 1.395-14.444 9.762-22.213 14.046-7.272 4.283-10.061-1.395-10.659-2.59-1.095-.498-.996.498-2.789-1.295-6.773-10.659 6.973-18.428 14.145-23.708 9.961-1.992 16.237 6.674 21.516 13.547M251.916 186.87c-.498 10.26-10.758 5.479-15.34 2.291-4.383-3.088-5.678-.498-6.076-6.475-.3-3.984-.698-7.869-.498-11.853 6.673-.598 13.845.996 19.324 4.98 2.79 1.992 8.069 8.567 2.59 11.057"></path><path fill="var(--svg-golang-secondary, #69D7E2)" d="M224.722 61.759c35.561-12.551 7.77-61.26-23.21-39.745-20.32-17.432-48.31-20.62-77.696-20.62C95.03 3.687 67.636 8.966 48.511 25.7 17.63 5.777-10.858 53.59 25.4 65.644c-10.16 39.445 1.394 79.688-.2 119.831-1.494 36.06-10.957 84.37 9.065 116.744 17.034 27.692 53.69 37.554 83.873 38.65 38.549 1.394 85.266-8.069 103.993-45.423 17.93-35.561 12.95-79.888 10.659-118.238-2.291-38.749 1.992-78.095-8.069-115.45"></path><path fill="var(--svg-golang-accent, #000000)" d="M254.605 180.794c-.996-2.092-2.888-4.483-4.681-5.778-4.582-3.287-10.46-5.08-16.536-5.279-.199-6.176-.398-12.95-.398-21.516v-7.77c-.1-24.504-.399-35.262-1.793-48.71-1.096-10.558-2.79-20.32-5.18-29.484 8.069-3.088 13.348-8.168 15.44-14.743 1.992-6.076.996-12.949-2.39-19.025-3.487-5.977-9.065-10.46-15.54-12.252-6.973-1.893-14.543-.498-21.815 4.382-6.475-5.478-13.945-9.662-22.313-12.85C164.557 2.292 147.325.2 123.916.2v.996l-.1-.996c-25.002 1.992-43.53 5.877-58.87 13.348q-9.264 4.482-16.435 10.758c-7.372-4.582-15.042-5.678-22.114-3.486-6.574 1.992-12.252 6.674-15.639 12.75S6.574 46.618 8.865 52.595c2.291 5.976 7.57 10.658 15.44 13.547-2.49 10.06-3.785 20.719-3.984 32.473-.2 11.455.298 20.62 2.091 41.338 1.295 15.44 1.793 22.512 1.993 31.079-6.774-.299-13.547 1.494-18.628 5.18-1.793 1.295-3.785 3.586-4.681 5.777-1.295 2.79-.797 5.28 1.793 6.774.398 4.781 3.088 6.972 7.172 6.574 2.988-.299 6.574-1.893 9.662-4.084a11.2 11.2 0 0 1 2.092-1.195c.299-.1.498-.2.797-.3 0 0 .597-.198.797-.298.298-.1.597-.2.796-.399-.199 4.682-.597 9.563-1.494 20.72-.996 12.55-1.494 19.424-1.693 27.094-.897 28.488 2.49 49.207 12.65 65.643 3.188 5.18 7.073 9.762 11.655 13.946-.897.597-4.682 3.387-5.877 4.283-4.184 3.188-7.072 5.877-8.766 8.865-2.191 3.885-2.191 7.77.299 11.854l.1.1.1.1c1.095 1.095 1.693 1.394 2.49 1.394h.298c.1.2.2.299.3.498.298.498.597.896.896 1.295 2.49 2.889 5.976 3.586 10.658.797 2.49-1.295 4.283-2.79 8.068-5.977l.2-.2c6.076-5.179 9.064-7.071 13.547-7.769l1.594-.299c.597.3 1.195.499 1.892.797 14.145 5.678 30.58 8.766 47.216 9.364 21.516.797 42.235-1.893 59.766-8.268 4.682-1.693 9.065-3.686 13.249-5.877 2.59.996 4.78 3.088 8.965 7.969.199.2.199.2.298.398.2.2.2.3.3.399.198.299.497.498.696.797 3.288 3.884 5.48 5.777 7.97 6.873 3.286 1.394 6.474.697 9.761-2.291 5.778-3.586 6.176-9.164 2.39-15.54-2.689-4.482-7.37-9.164-11.753-12.152 5.18-5.08 9.662-11.156 13.148-18.03 9.563-19.125 13.249-41.438 13.05-70.126-.1-10.16-.499-19.025-1.594-35.96v-.497q.747.299 1.494.896c3.088 2.092 6.674 3.785 9.662 4.084 4.084.399 6.774-1.793 7.172-6.574 2.49-1.594 2.988-4.084 1.693-6.873M222.93 18.328c5.977 1.594 11.157 5.778 14.344 11.356 3.188 5.578 4.084 11.854 2.291 17.432-1.892 5.877-6.674 10.559-14.145 13.348a162 162 0 0 0-5.279-15.739c2.889-2.49 4.283-5.578 1.992-9.96-2.29-4.384-6.275-4.882-10.36-3.587-2.59-3.387-5.478-6.375-8.466-9.164 6.574-4.184 13.348-5.379 19.623-3.686M10.56 51.997c-2.092-5.38-1.395-11.754 1.793-17.332s8.367-9.961 14.543-11.754c6.375-1.893 13.248-.997 20.022 2.988a65.5 65.5 0 0 0-10.36 11.854c-5.18-2.69-10.459-3.188-13.447 2.29-3.088 5.878.498 9.563 5.578 12.352-.697 1.694-1.395 3.487-1.992 5.28-.698 2.191-1.395 4.482-1.992 6.773-7.272-2.789-12.053-7.072-14.145-12.451m12.053 135.77c-.1 0-.698.199-.698.298-.298.1-.597.2-.896.399-.797.299-1.594.797-2.39 1.394-2.79 1.993-6.177 3.487-8.767 3.686-2.988.299-4.681-.996-4.98-4.582 2.092-.697 2.988-1.195 3.785-2.39l-1.594-1.196c-.597.797-1.195 1.096-2.988 1.693-.1 0-.1 0-.2.1-1.593-.897-1.892-2.291-.995-4.283.797-1.793 2.59-3.885 4.084-4.98 4.781-3.487 11.156-5.18 17.531-4.782 0 2.49.1 4.98 0 7.37 0 .3 0 .499-.1.798-.099 1.394-.099 1.992-.199 2.69-.298 2.888-.498 3.286-1.593 3.785m30.082 150.312-.2.2c-3.685 3.187-5.478 4.482-7.769 5.777-3.785 2.291-6.375 1.793-8.168-.398-.299-.3-.498-.698-.697-.997-.1-.1-.2-.298-.299-.398v-.1c.2-1.793.897-3.088 2.69-5.877.1-.1.1-.1.1-.199 1.095-1.594 1.593-2.49 2.091-3.586l-1.793-.797c-.398.897-.896 1.694-1.893 3.287-.1.1-.1.1-.1.2-1.792 2.59-2.59 4.183-2.988 5.976h-.398c-.2-.1-.498-.299-.896-.697-3.885-6.176-.797-11.455 7.968-18.03 1.096-.796 4.782-3.386 5.778-4.183.2 0 .398-.1.598-.2 5.378 4.583 11.654 8.567 18.627 11.854 0 .1.1.2.199.3-4.084.995-7.272 3.087-12.85 7.868m167.247-10.857c3.088 5.18 2.988 9.363-.897 12.252-.298-.598-.498-1.295-.896-2.291 0-.1 0-.1-.1-.2-1.394-3.785-2.29-5.378-3.984-7.171l-1.395 1.394c1.494 1.395 2.192 2.889 3.586 6.375 0 .1 0 .1.1.2.498 1.294.797 2.091 1.096 2.789-2.59 2.191-4.881 2.59-7.272 1.494-2.092-.897-4.084-2.79-7.272-6.375-.199-.2-.398-.498-.597-.797-.1-.1-.2-.2-.3-.399-.198-.199-.198-.199-.298-.398-3.686-4.283-5.877-6.574-8.268-7.87 5.579-3.187 10.56-6.773 15.042-10.957 4.183 3.088 8.865 7.67 11.455 11.954m1.394-32.274c-8.566 17.233-23.707 29.385-44.028 36.756-17.332 6.276-37.852 8.866-59.069 8.069-36.557-1.295-68.233-14.045-83.075-38.151-9.961-16.038-13.249-36.458-12.352-64.548.299-7.67.697-14.543 1.693-27.094 1.096-14.145 1.395-18.229 1.694-24.604.199-4.582.199-9.264.1-14.244-.2-8.766-.698-15.739-1.993-31.378-1.793-20.719-2.291-29.784-2.092-41.14.3-14.94 2.291-28.09 6.475-40.54C35.46 37.851 47.913 24.204 65.843 15.34 80.884 7.97 99.113 4.184 123.916 2.191c23.21 0 40.143 2.092 54.786 7.471 17.531 6.475 30.58 17.83 39.545 35.263 5.778 14.144 9.165 29.385 10.958 46.916 1.394 13.348 1.693 24.106 1.793 48.51v7.77c.1 12.053.298 20.52.797 28.987.199 3.287.298 4.682.796 12.551 1.096 16.934 1.495 25.7 1.594 35.86.2 28.588-3.387 50.602-12.85 69.429m30.481-109.074c-.1 0-.199-.1-.298-.1-1.793-.597-2.391-.996-2.989-1.693l-1.594 1.195c.897 1.196 1.793 1.694 3.786 2.39-.399 3.587-2.092 4.882-4.98 4.583-2.59-.2-5.978-1.793-8.767-3.686-.797-.597-1.593-.996-2.39-1.394-.1 0-.2-.1-.3-.1-.398-5.478-.398-6.873-.597-9.762l-.299-5.379c5.579.1 11.057 1.793 15.24 4.881 1.495 1.096 3.288 3.188 4.085 4.98.996 1.694.797 3.188-.897 4.085"></path><path fill="var(--svg-golang-light, #FFFFFF)" d="M138.918 104.123c.1 5.08 1.096 10.658.199 16.037-1.395 2.59-3.984 2.89-6.275 3.885-3.188-.498-5.878-2.59-7.172-5.578-.797-6.076.199-11.854.498-17.93 0-.2 3.785.1 7.172 1.096 2.888.896 5.578 2.39 5.578 2.49M110.728 104.521c-2.79 10.56 3.686 27.792 14.344 13.647-.797-5.977.1-11.754.398-17.631.1-.498-14.642 3.287-14.742 3.984"></path><path fill="var(--svg-golang-accent, #000000)" d="M140.113 108.805c-.2-2.989-.299-4.184-.299-5.678v-.697l-.697-.2-12.551-3.884v-.698l-1.295.3h-.1v.099l-14.144 3.586-.498.1-.2.497c-2.191 5.28-1.693 13.249 1.096 18.13 3.188 5.578 8.367 5.677 13.647-.698a10.2 10.2 0 0 0 7.47 5.38h.3l.298-.1c.399-.2.797-.3 1.495-.598.1 0 .1 0 .199-.1 2.888-.996 4.084-1.793 5.08-3.685l.1-.1v-.199c.298-1.793.398-3.686.398-5.777 0-1.495-.1-2.89-.299-5.678m-15.938-3.686c-.1 1.793-.199 2.49-.298 3.486-.2 3.686-.2 6.475.1 9.264-4.683 5.977-8.368 5.977-10.858 1.494-2.391-4.183-2.89-11.256-1.096-15.937l12.55-3.188c-.099 1.295-.198 2.59-.398 4.881m13.946 14.743c-.697 1.195-1.594 1.793-3.985 2.59-.1 0-.1 0-.199.099-.597.2-.996.398-1.295.498-2.69-.498-4.98-2.291-6.076-4.781-.299-2.69-.299-5.479-.1-9.164.1-.997.1-1.694.3-3.487.198-2.29.298-3.685.298-4.98l10.858 3.287c0 1.295.1 2.49.299 5.08.199 2.69.298 4.084.298 5.678 0 1.892-.1 3.586-.398 5.18"></path><g transform="translate(48.476 21.976)"><path fill="var(--svg-golang-light, #FFFFFF)" d="M2.291 38.749c9.164 35.66 66.241 26.496 64.05-9.264C63.75-13.348-6.475-5.08 2.29 38.749"></path><path fill="var(--svg-golang-accent, #000000)" d="M67.337 29.385c-.598-10.36-5.18-18.428-12.75-23.508C47.813 1.295 38.848-.498 29.983.597 21.118 1.794 12.949 5.778 7.57 12.054 1.594 19.026-.697 28.19 1.395 38.749l.896-.2-.896.2c9.363 36.656 68.133 27.791 65.942-9.364M3.187 38.55c-1.992-10.06.2-18.627 5.778-25.102 5.08-5.877 12.75-9.761 21.217-10.857s16.934.598 23.31 4.98c7.071 4.782 11.355 12.253 11.952 22.114 2.092 34.764-53.391 43.132-62.256 8.865"></path><ellipse cx="18.03" cy="32.872" fill="var(--svg-golang-accent, #000000)" rx="9.662" ry="10.459"></ellipse><ellipse cx="22.412" cy="35.262" fill="var(--svg-golang-light, #FFFFFF)" rx="2.291" ry="2.689"></ellipse></g><g transform="translate(129.618 18.098)"><path fill="var(--svg-golang-light, #FFFFFF)" d="M1.195 35.96C8.268 76.9 75.206 66.042 65.544 24.803 56.878-12.252-1.196-1.992 1.195 35.96"></path><path fill="var(--svg-golang-accent, #000000)" d="M66.44 24.604C57.575-13.547-2.19-3.088.2 36.059v.1c3.286 19.324 20.52 29.186 39.545 25.998C48.41 60.663 56.18 56.48 61.26 50.304c5.578-6.874 7.57-15.739 5.18-25.7m-6.673 24.504c-4.782 5.778-12.053 9.762-20.321 11.157-18.03 2.988-34.167-6.276-37.354-24.405C-.1-.996 56.28-10.858 64.647 25.002c2.192 9.463.399 17.731-4.88 24.106"></path><ellipse cx="17.631" cy="34.167" fill="var(--svg-golang-accent, #000000)" rx="9.463" ry="10.459"></ellipse><ellipse cx="22.014" cy="36.557" fill="var(--svg-golang-light, #FFFFFF)" rx="2.191" ry="2.689"></ellipse></g><path fill="var(--svg-golang-primary, #F6D2A2)" d="M112.785 83.002c-7.87.697-14.245 9.961-10.16 17.332 5.378 9.762 17.431-.896 24.902.1 8.666.2 15.739 9.164 22.612 1.594 7.67-8.368-3.287-16.536-11.954-20.122z"></path><path fill="#231F20" d="M151.135 89.676c-2.69-3.387-7.371-6.475-12.452-8.567l-.199-.1h-.199l-25.5.997c-8.866.797-15.24 11.057-10.958 18.826 1.694 2.989 3.985 4.483 7.073 4.682 2.29.1 4.682-.398 8.367-1.693.299-.1.697-.2 1.195-.399 4.981-1.693 6.973-2.191 8.965-1.892h.1c2.39 0 4.383.697 8.168 2.191 4.184 1.693 5.479 2.192 7.57 2.39 2.89.2 5.38-.796 7.67-3.286 3.885-4.284 3.686-8.866.2-13.149m-1.694 11.754c-1.892 2.092-3.785 2.79-6.076 2.69-1.793-.1-2.988-.598-6.973-2.192-3.984-1.693-6.175-2.29-8.765-2.39-2.49-.3-4.582.199-9.862 1.992-.498.199-.896.299-1.195.398-7.272 2.49-10.758 2.291-13.149-2.092-3.586-6.474 1.893-15.24 9.364-15.937l25.201-.997c4.782 1.993 9.065 4.881 11.555 7.97 2.988 3.585 3.088 7.171-.1 10.558"></path><path fill="var(--svg-golang-accent, #000000)" d="M140.178 78.719c-3.088-11.356-28.987-9.662-28.39 3.885 1.295 10.06 31.378 7.37 28.39-3.885"></path></svg>Go</span></button></li></ul><div class="tab-content"><div role="tabpanel" id="react-aria2340256199-:rj:-tabpane-tab-0" aria-labelledby="react-aria2340256199-:rj:-tab-tab-0" class="fade tab-pane active show"><h3>Entity</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">entity</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">jakarta</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">persistence</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">lombok</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">Data</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Data</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Entity</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">User</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Id</span><span>
</span><span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GeneratedValue</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>strategy </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">GenerationType</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>IDENTITY</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">String</span><span> name</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">String</span><span> email</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>Repository</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">repository</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">entity</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">User</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">data</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">jpa</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">repository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">JpaRepository</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">interface</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">UserRepository</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">extends</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">JpaRepository</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(97, 130, 184);">User</span><span class="token token generics" style="color: rgb(57, 173, 181);">,</span><span class="token token generics"> </span><span class="token token generics" style="color: rgb(97, 130, 184);">Long</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>REST Controller</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">controller</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">entity</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">User</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">repository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">UserRepository</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">web</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">bind</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">annotation</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">java</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">util</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RestController</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/api/users"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">lombok</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">RequiredArgsConstructor</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequiredArgsConstructor</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">UserController</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>  </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">final</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">UserRepository</span><span> userRepository</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span>  </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GetMapping</span><span>
</span><span>  </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(97, 130, 184);">User</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getAllUsers</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> userRepository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">findAll</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>  </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PostMapping</span><span>
</span><span>  </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">User</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createUser</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">User</span><span> user</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> userRepository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">save</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>user</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div><div role="tabpanel" id="react-aria2340256199-:rj:-tabpane-tab-1" aria-labelledby="react-aria2340256199-:rj:-tab-tab-1" class="fade tab-pane"><h3>Entity</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>entity
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> jakarta</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>persistence</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Entity</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">User</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>  </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Id</span><span>
</span><span>  </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GeneratedValue</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>strategy </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> GenerationType</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>IDENTITY</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>  </span><span class="token token" style="color: rgb(124, 77, 255);">val</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> </span><span class="token token" style="color: rgb(247, 109, 71);">0</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span>
<span>  </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> name</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> String</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span>
<span>  </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> email</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> String
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>Repository</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>repository
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>entity</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>User
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>data</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>jpa</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>repository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>JpaRepository
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">interface</span><span> UserRepository </span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> JpaRepository</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span>User</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>REST Controller</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>controller
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>entity</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>User
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>repository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>UserRepository
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>web</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>bind</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>annotation</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RestController</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/api/users"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">UserController</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>  </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">val</span><span> userRepository</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> UserRepository
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>  </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GetMapping</span><span>
</span><span>  </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getAllUsers</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> List</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span>User</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> userRepository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">findAll</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>  </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PostMapping</span><span>
</span><span>  </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createUser</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> user</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> User</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> User </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> userRepository</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">save</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>user</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div><div role="tabpanel" id="react-aria2340256199-:rj:-tabpane-tab-2" aria-labelledby="react-aria2340256199-:rj:-tab-tab-2" class="fade tab-pane"><h3>Model and Database Connection</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-go" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> main
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>	</span><span class="token token" style="color: rgb(246, 164, 52);">"gorm.io/driver/postgres"</span><span>
</span><span>	</span><span class="token token" style="color: rgb(246, 164, 52);">"gorm.io/gorm"</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> DB </span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>gorm</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>DB
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">connectDatabase</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	dsn </span><span class="token token" style="color: rgb(57, 173, 181);">:=</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">"host=localhost user=your_username password=your_password dbname=demo port=5432 sslmode=disable"</span><span>
</span><span>	db</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> err </span><span class="token token" style="color: rgb(57, 173, 181);">:=</span><span> gorm</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Open</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>postgres</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Open</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>dsn</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">&amp;</span><span>gorm</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Config</span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	</span><span class="token token" style="color: rgb(124, 77, 255);">if</span><span> err </span><span class="token token" style="color: rgb(57, 173, 181);">!=</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">nil</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>		</span><span class="token token" style="color: rgb(124, 77, 255);">panic</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"Failed to connect to database!"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>	DB </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> db
</span><span>	DB</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">AutoMigrate</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">&amp;</span><span>User</span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">type</span><span> User </span><span class="token token" style="color: rgb(124, 77, 255);">struct</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	ID    </span><span class="token token" style="color: rgb(57, 173, 181);">uint</span><span>   </span><span class="token token" style="color: rgb(246, 164, 52);">`json:"id" gorm:"primaryKey"`</span><span>
</span><span>	Name  </span><span class="token token" style="color: rgb(57, 173, 181);">string</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">`json:"name"`</span><span>
</span><span>	Email </span><span class="token token" style="color: rgb(57, 173, 181);">string</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">`json:"email"`</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<h3>Handlers</h3>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-go" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> main
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>	</span><span class="token token" style="color: rgb(246, 164, 52);">"github.com/gin-gonic/gin"</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getUsers</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>c </span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Context</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	</span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> users </span><span class="token token" style="color: rgb(57, 173, 181);">[</span><span class="token token" style="color: rgb(57, 173, 181);">]</span><span>User
</span><span>	DB</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Find</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">&amp;</span><span>users</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	c</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">JSON</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(247, 109, 71);">200</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> users</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createUser</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>c </span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Context</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	</span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> user User
</span><span>	</span><span class="token token" style="color: rgb(124, 77, 255);">if</span><span> err </span><span class="token token" style="color: rgb(57, 173, 181);">:=</span><span> c</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">ShouldBindJSON</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">&amp;</span><span>user</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span> err </span><span class="token token" style="color: rgb(57, 173, 181);">!=</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">nil</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>		c</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">JSON</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(247, 109, 71);">400</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>H</span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span class="token token" style="color: rgb(246, 164, 52);">"error"</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> err</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Error</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>		</span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span>
</span><span>	</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>	DB</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Create</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">&amp;</span><span>user</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	c</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">JSON</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(247, 109, 71);">201</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> user</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">main</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	r </span><span class="token token" style="color: rgb(57, 173, 181);">:=</span><span> gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Default</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	</span><span class="token token" style="color: rgb(124, 77, 255);">connectDatabase</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">GET</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/api/users"</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> getUsers</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">POST</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/api/users"</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> createUser</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Run</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(170, 191, 201);">// Listen and serve on 0.0.0.0:8080</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div></div><hr>
<h2>‚ñ∂Ô∏è Running the Applications</h2>
<ul class="list-group list-group-flush">
<li class="list-group-item">
<p><strong>Spring Boot:</strong></p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>./mvnw spring-boot:run</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
</li>
<li class="list-group-item">
<p><strong>Gin:</strong></p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>go run main.go</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
</li>
</ul>
<hr>
<h2>üß™ Testing with cURL</h2>
<p>You can test the API using the following cURL commands:</p>
<p><strong>Fetch All Users:</strong></p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X GET http://localhost:8080/api/users</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<p><strong>Create a New User:</strong></p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X POST http://localhost:8080/api/users </span><span class="token token" style="color: rgb(57, 173, 181);">\</span><span>
</span><span>-H </span><span class="token token" style="color: rgb(246, 164, 52);">"Content-Type: application/json"</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">\</span><span>
</span><span>-d </span><span class="token token" style="color: rgb(246, 164, 52);">'{"name": "John Doe", "email": "johndoe@example.com"}'</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<p>This guide demonstrates how to use ORM for PostgreSQL in Spring Boot with Java, Kotlin, and Gin.</p>]]></content:encoded>
    </item>

  </channel>
</rss>
