<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title><![CDATA[≈ûuayb ≈ûim≈üek's Blog]]></title>
    <description><![CDATA[A blog about backend, fullstack development, and DevOps (English)]]></description>
    <link>https://susimsek.github.io/blog</link>
    <language>en</language>
    <copyright>All rights reserved 2024, ≈ûuayb ≈ûim≈üek Blog</copyright>
    <lastBuildDate>Wed, 11 Dec 2024 12:00:00 GMT</lastBuildDate>

    <item>
      <title><![CDATA[Building a REST API with Spring Boot]]></title>
      <link>https://susimsek.github.io/blog/building-a-rest-api-with-spring-boot</link>
      <guid>https://susimsek.github.io/blog/building-a-rest-api-with-spring-boot</guid>
      <description><![CDATA[Learn how to create a REST API using Spring Boot. Includes HTTP methods, JSON handling, Lombok integration, and curl for testing.]]></description>
      <pubDate>Wed, 11 Dec 2024 12:00:00 GMT</pubDate>
      <category><![CDATA[Java]]></category>
      <category><![CDATA[Kotlin]]></category>
      <category><![CDATA[Spring Boot]]></category>
      <category><![CDATA[REST API]]></category>
      <category><![CDATA[Programming]]></category>
      <enclosure url="https://susimsek.github.io/blog/images/spring-boot-rest-api-thumbnail.jpg" type="image/jpeg"/>
      <content:encoded><![CDATA[<p>Spring Boot is an excellent tool for quickly developing RESTful web services. In this article, we‚Äôll walk through creating a REST API step by step using Spring Boot.</p>
<hr>
<h2>üåü What is a REST API?</h2>
<p>REST (Representational State Transfer) is an architectural style for designing web services. It uses standard HTTP methods for communication between clients and servers.</p>
<h3><strong>HTTP Methods</strong></h3>






























<table class="table table-striped table-bordered"><thead><tr><th><strong>Method</strong></th><th><strong>Description</strong></th><th><strong>Example Endpoint</strong></th></tr></thead><tbody><tr><td><strong>GET</strong></td><td>Retrieves a resource.</td><td><code node="[object Object]">/api/todos</code></td></tr><tr><td><strong>POST</strong></td><td>Creates a new resource.</td><td><code node="[object Object]">/api/todos</code></td></tr><tr><td><strong>PUT</strong></td><td>Updates or creates a resource.</td><td><code node="[object Object]">/api/todos/1</code></td></tr><tr><td><strong>DELETE</strong></td><td>Deletes a resource.</td><td><code node="[object Object]">/api/todos/1</code></td></tr></tbody></table>
<hr>
<h2>üõ†Ô∏è Step 1: Create a Project</h2>
<p>You can create a Spring Boot project using <a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer" class="text-decoration-none text-primary">Spring Initializr</a>. Select the following settings:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>Project:</strong> Maven</li>
<li class="list-group-item"><strong>Language:</strong> Java or Kotlin</li>
<li class="list-group-item"><strong>Spring Boot Version:</strong> 3.0.0+</li>
<li class="list-group-item"><strong>Dependencies:</strong> Spring Web, Spring Boot DevTools, Lombok</li>
</ul>
<p>Download the project, open it in your IDE, and get ready to run it.</p>
<hr>
<h2>üìñ Step 2: Create a Model Class</h2>
<p>Create a model class for a <code node="[object Object]">Todo</code> object:</p><ul class="mb-3 nav nav-tabs" role="tablist"><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r5:-tab-tab-0" role="tab" data-rr-ui-event-key="tab-0" aria-controls="react-aria8449685738-:r5:-tabpane-tab-0" aria-selected="true" class="nav-link active"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><path fill="var(--svg-java-primary, #0074BD)" d="M47.617 98.12s-4.767 2.774 3.397 3.71c9.892 1.13 14.947.968 25.845-1.092 0 0 2.871 1.795 6.873 3.351-24.439 10.47-55.308-.607-36.115-5.969m-2.988-13.665s-5.348 3.959 2.823 4.805c10.567 1.091 18.91 1.18 33.354-1.6 0 0 1.993 2.025 5.132 3.131-29.542 8.64-62.446.68-41.309-6.336"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M69.802 61.271c6.025 6.935-1.58 13.17-1.58 13.17s15.289-7.891 8.269-17.777c-6.559-9.215-11.587-13.792 15.635-29.58 0 .001-42.731 10.67-22.324 34.187"></path><path fill="var(--svg-java-primary, #0074BD)" d="M102.123 108.229s3.529 2.91-3.888 5.159c-14.102 4.272-58.706 5.56-71.094.171-4.451-1.938 3.899-4.625 6.526-5.192 2.739-.593 4.303-.485 4.303-.485-4.953-3.487-32.013 6.85-13.743 9.815 49.821 8.076 90.817-3.637 77.896-9.468M49.912 70.294s-22.686 5.389-8.033 7.348c6.188.828 18.518.638 30.011-.326 9.39-.789 18.813-2.474 18.813-2.474s-3.308 1.419-5.704 3.053c-23.042 6.061-67.544 3.238-54.731-2.958 10.832-5.239 19.644-4.643 19.644-4.643m40.697 22.747c23.421-12.167 12.591-23.86 5.032-22.285-1.848.385-2.677.72-2.677.72s.688-1.079 2-1.543c14.953-5.255 26.451 15.503-4.823 23.725 0-.002.359-.327.468-.617"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M76.491 1.587S89.459 14.563 64.188 34.51c-20.266 16.006-4.621 25.13-.007 35.559-11.831-10.673-20.509-20.07-14.688-28.815C58.041 28.42 81.722 22.195 76.491 1.587"></path><path fill="var(--svg-java-primary, #0074BD)" d="M52.214 126.021c22.476 1.437 57-.8 57.817-11.436 0 0-1.571 4.032-18.577 7.231-19.186 3.612-42.854 3.191-56.887.874 0 .001 2.875 2.381 17.647 3.331"></path></svg>Java</span></button></li><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r5:-tab-tab-1" role="tab" data-rr-ui-event-key="tab-1" aria-controls="react-aria8449685738-:r5:-tabpane-tab-1" aria-selected="false" tabindex="-1" class="nav-link"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><defs><linearGradient id="kotlin_svg__a" x1="-11.899" x2="40.299" y1="48.694" y2="-8.322" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-a1, #1c93c1)"></stop><stop offset="0.163" stop-color="var(--svg-kotlin-a2, #2391c0)"></stop><stop offset="0.404" stop-color="var(--svg-kotlin-a3, #378bbe)"></stop><stop offset="0.696" stop-color="var(--svg-kotlin-a4, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-a5, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__b" x1="43.553" x2="95.988" y1="149.174" y2="94.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-b1, #1c93c1)"></stop><stop offset="0.216" stop-color="var(--svg-kotlin-b2, #2d8ebf)"></stop><stop offset="0.64" stop-color="var(--svg-kotlin-b3, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-b4, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__c" x1="3.24" x2="92.481" y1="95.249" y2="2.116" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-c1, #c757a7)"></stop><stop offset="0.046" stop-color="var(--svg-kotlin-c2, #ca5a9e)"></stop><stop offset="0.241" stop-color="var(--svg-kotlin-c3, #d66779)"></stop><stop offset="0.428" stop-color="var(--svg-kotlin-c4, #e17357)"></stop><stop offset="0.6" stop-color="var(--svg-kotlin-c5, #e97c3a)"></stop><stop offset="0.756" stop-color="var(--svg-kotlin-c6, #ef8324)"></stop><stop offset="0.888" stop-color="var(--svg-kotlin-c7, #f28817)"></stop><stop offset="0.982" stop-color="var(--svg-kotlin-c8, #f48912)"></stop></linearGradient></defs><path fill="url(#kotlin_svg__a)" d="M0 0h65.4L0 64.4z"></path><path fill="url(#kotlin_svg__b)" d="M128 128 64.6 62.6 0 128z"></path><path fill="url(#kotlin_svg__c)" d="M0 128 128 0H64.6L0 63.7z"></path></svg>Kotlin</span></button></li></ul><div class="tab-content"><div role="tabpanel" id="react-aria8449685738-:r5:-tabpane-tab-0" aria-labelledby="react-aria8449685738-:r5:-tab-tab-0" class="fade tab-pane active show"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">model</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">lombok</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">Data</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@Data</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">String</span><span> title</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">boolean</span><span> completed</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div><div role="tabpanel" id="react-aria8449685738-:r5:-tabpane-tab-1" aria-labelledby="react-aria8449685738-:r5:-tab-tab-1" class="fade tab-pane"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>model
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">data</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">Todo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> title</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> String</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">var</span><span> completed</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Boolean
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div></div><hr>
<h2>üìò Step 3: Create a Controller Class</h2>
<p>Add a <code node="[object Object]">TodoController</code> class to define CRUD operations as REST endpoints:</p><ul class="mb-3 nav nav-tabs" role="tablist"><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r7:-tab-tab-0" role="tab" data-rr-ui-event-key="tab-0" aria-controls="react-aria8449685738-:r7:-tabpane-tab-0" aria-selected="true" class="nav-link active"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><path fill="var(--svg-java-primary, #0074BD)" d="M47.617 98.12s-4.767 2.774 3.397 3.71c9.892 1.13 14.947.968 25.845-1.092 0 0 2.871 1.795 6.873 3.351-24.439 10.47-55.308-.607-36.115-5.969m-2.988-13.665s-5.348 3.959 2.823 4.805c10.567 1.091 18.91 1.18 33.354-1.6 0 0 1.993 2.025 5.132 3.131-29.542 8.64-62.446.68-41.309-6.336"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M69.802 61.271c6.025 6.935-1.58 13.17-1.58 13.17s15.289-7.891 8.269-17.777c-6.559-9.215-11.587-13.792 15.635-29.58 0 .001-42.731 10.67-22.324 34.187"></path><path fill="var(--svg-java-primary, #0074BD)" d="M102.123 108.229s3.529 2.91-3.888 5.159c-14.102 4.272-58.706 5.56-71.094.171-4.451-1.938 3.899-4.625 6.526-5.192 2.739-.593 4.303-.485 4.303-.485-4.953-3.487-32.013 6.85-13.743 9.815 49.821 8.076 90.817-3.637 77.896-9.468M49.912 70.294s-22.686 5.389-8.033 7.348c6.188.828 18.518.638 30.011-.326 9.39-.789 18.813-2.474 18.813-2.474s-3.308 1.419-5.704 3.053c-23.042 6.061-67.544 3.238-54.731-2.958 10.832-5.239 19.644-4.643 19.644-4.643m40.697 22.747c23.421-12.167 12.591-23.86 5.032-22.285-1.848.385-2.677.72-2.677.72s.688-1.079 2-1.543c14.953-5.255 26.451 15.503-4.823 23.725 0-.002.359-.327.468-.617"></path><path fill="var(--svg-java-secondary, #EA2D2E)" d="M76.491 1.587S89.459 14.563 64.188 34.51c-20.266 16.006-4.621 25.13-.007 35.559-11.831-10.673-20.509-20.07-14.688-28.815C58.041 28.42 81.722 22.195 76.491 1.587"></path><path fill="var(--svg-java-primary, #0074BD)" d="M52.214 126.021c22.476 1.437 57-.8 57.817-11.436 0 0-1.571 4.032-18.577 7.231-19.186 3.612-42.854 3.191-56.887.874 0 .001 2.875 2.381 17.647 3.331"></path></svg>Java</span></button></li><li class="nav-item" role="presentation"><button type="button" id="react-aria8449685738-:r7:-tab-tab-1" role="tab" data-rr-ui-event-key="tab-1" aria-controls="react-aria8449685738-:r7:-tabpane-tab-1" aria-selected="false" tabindex="-1" class="nav-link"><span style="display: flex; align-items: center;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="height: 20px; margin-right: 8px;"><defs><linearGradient id="kotlin_svg__a" x1="-11.899" x2="40.299" y1="48.694" y2="-8.322" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-a1, #1c93c1)"></stop><stop offset="0.163" stop-color="var(--svg-kotlin-a2, #2391c0)"></stop><stop offset="0.404" stop-color="var(--svg-kotlin-a3, #378bbe)"></stop><stop offset="0.696" stop-color="var(--svg-kotlin-a4, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-a5, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__b" x1="43.553" x2="95.988" y1="149.174" y2="94.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-b1, #1c93c1)"></stop><stop offset="0.216" stop-color="var(--svg-kotlin-b2, #2d8ebf)"></stop><stop offset="0.64" stop-color="var(--svg-kotlin-b3, #587eb9)"></stop><stop offset="0.995" stop-color="var(--svg-kotlin-b4, #7f6cb1)"></stop></linearGradient><linearGradient id="kotlin_svg__c" x1="3.24" x2="92.481" y1="95.249" y2="2.116" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="var(--svg-kotlin-c1, #c757a7)"></stop><stop offset="0.046" stop-color="var(--svg-kotlin-c2, #ca5a9e)"></stop><stop offset="0.241" stop-color="var(--svg-kotlin-c3, #d66779)"></stop><stop offset="0.428" stop-color="var(--svg-kotlin-c4, #e17357)"></stop><stop offset="0.6" stop-color="var(--svg-kotlin-c5, #e97c3a)"></stop><stop offset="0.756" stop-color="var(--svg-kotlin-c6, #ef8324)"></stop><stop offset="0.888" stop-color="var(--svg-kotlin-c7, #f28817)"></stop><stop offset="0.982" stop-color="var(--svg-kotlin-c8, #f48912)"></stop></linearGradient></defs><path fill="url(#kotlin_svg__a)" d="M0 0h65.4L0 64.4z"></path><path fill="url(#kotlin_svg__b)" d="M128 128 64.6 62.6 0 128z"></path><path fill="url(#kotlin_svg__c)" d="M0 128 128 0H64.6L0 63.7z"></path></svg>Kotlin</span></button></li></ul><div class="tab-content"><div role="tabpanel" id="react-aria8449685738-:r7:-tabpane-tab-0" aria-labelledby="react-aria8449685738-:r7:-tab-tab-0" class="fade tab-pane active show"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-java" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">controller</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">model</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">web</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">bind</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">annotation</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">java</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">util</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">ArrayList</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token">java</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token">util</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RestController</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/api/todos"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">TodoController</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(97, 130, 184);">Todo</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span> todos </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">new</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">ArrayList</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GetMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">List</span><span class="token token generics" style="color: rgb(57, 173, 181);">&lt;</span><span class="token token generics" style="color: rgb(97, 130, 184);">Todo</span><span class="token token generics" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getAllTodos</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todos</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PostMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">setId</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(124, 77, 255);">long</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">size</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">+</span><span> </span><span class="token token" style="color: rgb(247, 109, 71);">1</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">add</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PutMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">updateTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        </span><span class="token token" style="color: rgb(97, 130, 184);">Todo</span><span> todo </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">stream</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">filter</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>t </span><span class="token token" style="color: rgb(57, 173, 181);">-&gt;</span><span> t</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">getId</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">equals</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>id</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">findFirst</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">orElse</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(124, 77, 255);">null</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">if</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo </span><span class="token token" style="color: rgb(57, 173, 181);">!=</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">null</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>            todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">setTitle</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">getTitle</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>            todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">setCompleted</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">isCompleted</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>        </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@DeleteMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">public</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">void</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">deleteTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> </span><span class="token token" style="color: rgb(97, 130, 184);">Long</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">removeIf</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo </span><span class="token token" style="color: rgb(57, 173, 181);">-&gt;</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">getId</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">equals</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>id</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">;</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div><div role="tabpanel" id="react-aria8449685738-:r7:-tabpane-tab-1" aria-labelledby="react-aria8449685738-:r7:-tab-tab-1" class="fade tab-pane"><pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-kotlin" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>controller
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> com</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>example</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>demo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>model</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Todo
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> org</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>springframework</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>web</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>bind</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>annotation</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>
</span>
<span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RestController</span><span>
</span><span></span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/api/todos"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span></span><span class="token token" style="color: rgb(124, 77, 255);">class</span><span> TodoController </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span>
<span>    </span><span class="token token" style="color: rgb(124, 77, 255);">private</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">val</span><span> todos </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> mutableListOf</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span>Todo</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@GetMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">getAllTodos</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> List</span><span class="token token" style="color: rgb(57, 173, 181);">&lt;</span><span>Todo</span><span class="token token" style="color: rgb(57, 173, 181);">&gt;</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> todos
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PostMapping</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">createTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> todo</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>id </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>size </span><span class="token token" style="color: rgb(57, 173, 181);">+</span><span> </span><span class="token token" style="color: rgb(247, 109, 71);">1</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">toLong</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">add</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PutMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">updateTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@RequestBody</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Todo</span><span class="token token" style="color: rgb(57, 173, 181);">?</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">val</span><span> todo </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">find</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span> it</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>id </span><span class="token token" style="color: rgb(57, 173, 181);">==</span><span> id </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>        todo</span><span class="token token" style="color: rgb(57, 173, 181);">?</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">apply</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>            title </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>title
</span><span>            completed </span><span class="token token" style="color: rgb(57, 173, 181);">=</span><span> updatedTodo</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>completed
</span><span>        </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>        </span><span class="token token" style="color: rgb(124, 77, 255);">return</span><span> todo
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span>
<span>    </span><span class="token token annotation" style="color: rgb(57, 173, 181);">@DeleteMapping</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token string-literal singleline" style="color: rgb(246, 164, 52);">"/{id}"</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>    </span><span class="token token" style="color: rgb(124, 77, 255);">fun</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">deleteTodo</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token annotation" style="color: rgb(57, 173, 181);">@PathVariable</span><span> id</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> Long</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>        todos</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">removeIf</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span> it</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>id </span><span class="token token" style="color: rgb(57, 173, 181);">==</span><span> id </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span>    </span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre></div></div><hr>
<h2>‚ñ∂Ô∏è Step 4: Test the API</h2>
<p>Test your API using <code node="[object Object]">curl</code> commands:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>GET All Todos:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X GET http://localhost:8080/api/todos</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>POST New Todo:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X POST http://localhost:8080/api/todos -H </span><span class="token token" style="color: rgb(246, 164, 52);">"Content-Type: application/json"</span><span> -d </span><span class="token token" style="color: rgb(246, 164, 52);">'{"title": "New Todo", "completed": false}'</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>PUT Update Todo:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X PUT http://localhost:8080/api/todos/1 -H </span><span class="token token" style="color: rgb(246, 164, 52);">"Content-Type: application/json"</span><span> -d </span><span class="token token" style="color: rgb(246, 164, 52);">'{"title": "Updated Todo", "completed": true}'</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ul class="list-group list-group-flush">
<li class="list-group-item"><strong>DELETE Delete Todo:</strong></li>
</ul>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">curl</span><span> -X DELETE http://localhost:8080/api/todos/1</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<p>By following these steps, you‚Äôll have built a REST API with Spring Boot.</p>]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[Gin - First Application]]></title>
      <link>https://susimsek.github.io/blog/golang-gin-first-application</link>
      <guid>https://susimsek.github.io/blog/golang-gin-first-application</guid>
      <description><![CDATA[A beginner-friendly guide to creating your first Golang Gin application from scratch. Learn the basics and start your journey with Gin.]]></description>
      <pubDate>Thu, 14 Dec 2024 12:00:00 GMT</pubDate>
      <category><![CDATA[Go]]></category>
      <category><![CDATA[Gin]]></category>
      <category><![CDATA[Beginner Guide]]></category>
      <category><![CDATA[Programming]]></category>
      <enclosure url="https://susimsek.github.io/blog/images/golang-gin-first-app-thumbnail.jpg" type="image/jpeg" />
      <content:encoded><![CDATA[<p>Gin simplifies the process of building high-performance web applications with Golang. In this guide, we‚Äôll walk through creating your first Gin application step by step.</p>
<hr>
<h2>üåü Prerequisites</h2>
<p>üìã Before starting, ensure you have the following:</p>
<ul class="list-group list-group-flush">
<li class="list-group-item">üîß <strong>Golang</strong> 1.17+ installed</li>
<li class="list-group-item">üóç <strong>A text editor or IDE</strong> (e.g., Visual Studio Code, GoLand, or Vim)</li>
</ul>
<hr>
<h2>üõ†Ô∏è Step 1: Set Up Your Gin Project</h2>
<p>You can set up your first Gin project by following these steps:</p>
<ol class="list-group list-group-numbered">
<li class="list-group-item"><strong>Initialize a Go Module</strong></li>
</ol>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">mkdir</span><span> gin-first-app
</span><span></span><span class="token token" style="color: rgb(97, 130, 184);">cd</span><span> gin-first-app
</span>go mod init gin-first-app</code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ol class="list-group list-group-numbered">
<li class="list-group-item"><strong>Install Gin</strong></li>
</ol>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>go get -u github.com/gin-gonic/gin</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<h2>üìñ Step 2: Writing Your First Endpoint</h2>
<p>Let‚Äôs write a simple endpoint to say hello:</p>
<p>Create a file named <code node="[object Object]">main.go</code> with the following content:</p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-go" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(124, 77, 255);">package</span><span> main
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">import</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>
</span><span>	</span><span class="token token" style="color: rgb(246, 164, 52);">"github.com/gin-gonic/gin"</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span></span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">main</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>	r </span><span class="token token" style="color: rgb(57, 173, 181);">:=</span><span> gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Default</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">GET</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(246, 164, 52);">"/hello"</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> </span><span class="token token" style="color: rgb(124, 77, 255);">func</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span>c </span><span class="token token" style="color: rgb(57, 173, 181);">*</span><span>gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>Context</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>		c</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">JSON</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(247, 109, 71);">200</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span> gin</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span>H</span><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>			</span><span class="token token" style="color: rgb(246, 164, 52);">"message"</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">"Hello, Gin!"</span><span class="token token" style="color: rgb(57, 173, 181);">,</span><span>
</span><span>		</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span><span>	</span><span class="token token" style="color: rgb(57, 173, 181);">}</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span>
</span>
<span>	r</span><span class="token token" style="color: rgb(57, 173, 181);">.</span><span class="token token" style="color: rgb(124, 77, 255);">Run</span><span class="token token" style="color: rgb(57, 173, 181);">(</span><span class="token token" style="color: rgb(57, 173, 181);">)</span><span> </span><span class="token token" style="color: rgb(170, 191, 201);">// Listen and serve on 0.0.0.0:8080</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<h2>‚ñ∂Ô∏è Step 3: Run the Application</h2>
<ol class="list-group list-group-numbered">
<li class="list-group-item">Open a terminal in the project folder.</li>
<li class="list-group-item">Execute the following command to run your application:</li>
</ol>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-bash" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span>go run main.go</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<ol class="list-group list-group-numbered">
<li class="list-group-item">Access the endpoint at:
<pre><code node="[object Object]">http://localhost:8080/hello
</code></pre>
</li>
</ol>
<p><strong>Response:</strong></p>
<pre><div class="code-block-container"><div node="[object Object]" style="text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none; overflow: auto; position: relative; margin: 0.5em 0px; padding: 1.25em 1em;"><code class="language-json" style="white-space: pre; text-align: left; word-spacing: normal; word-break: normal; overflow-wrap: normal; color: rgb(144, 164, 174); background: rgb(250, 250, 250); font-family: &quot;Roboto Mono&quot;, monospace; font-size: 1em; line-height: 1.5em; tab-size: 4; hyphens: none;"><span class="token token" style="color: rgb(57, 173, 181);">{</span><span>
</span><span>  </span><span class="token token" style="color: rgb(57, 173, 181);">"message"</span><span class="token token" style="color: rgb(57, 173, 181);">:</span><span> </span><span class="token token" style="color: rgb(246, 164, 52);">"Hello, Gin!"</span><span>
</span><span></span><span class="token token" style="color: rgb(57, 173, 181);">}</span></code></div><button type="button" class="copy-button btn btn-primary btn-sm"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="copy" class="svg-inline--fa fa-copy me-2 fa-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"></path></svg></button></div></pre>
<hr>
<p>This post covers the basics of creating a Gin project, writing an endpoint, and running it successfully.</p>]]></content:encoded>
    </item>
  </channel>
</rss>
