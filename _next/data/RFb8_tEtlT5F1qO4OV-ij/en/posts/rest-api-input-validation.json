{"pageProps":{"_nextI18Next":{"initialI18nStore":{"en":{"common":{"common":{"siteName":"≈ûuayb ≈ûim≈üek's Blog","language":"Language","theme":"Theme","header":{"logoAlt":"≈ûuayb's Blog Logo","title":"≈ûuayb's Blog","menu":{"home":"Home","about":"About","contact":"Contact","search":"Search"},"themeToggle":"Toggle Theme","theme":{"light":"Light Mode","dark":"Dark Mode"}},"sidebar":{"title":"Topics","loading":"Loading more topics..."},"footer":{"text":"¬© {{year}} ≈ûuayb's Blog. All rights reserved."},"pagination":{"pageSize":"Page size","showingResults":"Showing {{start}}‚Äì{{end}} of {{total}} results"},"searchBar":{"placeholder":"Search"},"sort":{"newest":"Newest First","oldest":"Oldest First"},"contactInfo":{"email":"Email"},"codeBlock":{"copy":"Copy","copied":"Copied!"},"selected":"Selected","selectAll":"Select All","clearAll":"Clear All","noResults":"No results found","andMore":"and {{count}} more","datePicker":{"selectDate":"Select Date","today":"Today","yesterday":"Yesterday","last7Days":"Last 7 Days","last30Days":"Last 30 Days","customDate":"Custom Date","startDatePlaceholder":"Start Date","endDatePlaceholder":"End Date","startDateLabel":"Start Date","endDateLabel":"End Date","clearSelection":"Clear Selection","applySelection":"Apply Selection"},"validation":{"required":"This field is required.","minlength":"This field must be at least {{ min }} characters.","maxlength":"This field cannot be longer than {{ max }} characters.","min":"This field should be at least {{ min }}.","max":"This field cannot be more than {{ max }}.","minbytes":"This field should be at least {{ min }} bytes.","maxbytes":"This field cannot be more than {{ max }} bytes.","pattern":"This field should match the pattern for {{ pattern }}.","number":"This field should be a number.","datetimelocal":"This field should be a date and time.","patternLogin":"This field can only contain letters, digits, and e-mail addresses.","email":"Please enter a valid email address.","url":"Please enter a valid URL.","alpha":"This field should only contain letters.","alphanumeric":"This field should only contain letters and numbers.","passwordStrength":"Password must contain at least 8 characters, including an uppercase letter, a number, and a special character.","startDateAfterEndDate":"Start date cannot be after end date.","endDateBeforeStartDate":"End date cannot be before start date."},"viewAllResults":"See all results for \"{{query}}\""}},"post":{"post":{"readMore":"Read More","noPostsFound":"No posts found."}}}},"initialLocale":"en","ns":["common","post"],"userConfig":{"debug":false,"i18n":{"defaultLocale":"en","locales":["en","tr"]},"localePath":"/home/circleci/project/public/locales","default":{"debug":false,"i18n":{"defaultLocale":"en","locales":["en","tr"]},"localePath":"/home/circleci/project/public/locales"}}},"post":{"contentHtml":"\nInput validation is crucial for building secure and robust REST APIs. In this article, we will explore how to implement input validation in Spring Boot using Java, Kotlin, and Go (with Gin).\n\n---\n\n## üåü Why Validate Input?\n\nValidation ensures the data sent to your API adheres to expected formats and prevents potential vulnerabilities like SQL Injection, XSS, and bad data entries.\n\n---\n\n## üõ†Ô∏è Step 1: Add Validation Dependencies\n\nFor Spring Boot projects, include the following dependencies:\n\n- **Maven:**\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-validation</artifactId>\n</dependency>\n```\n\n- **Gradle:**\n\n```groovy\nimplementation 'org.springframework.boot:spring-boot-starter-validation'\n```\n\nFor Go projects with Gin, use the following:\n\n```bash\n# Install the Gin framework\ngo get -u github.com/gin-gonic/gin\n\n# Install the validator package\ngo get -u github.com/go-playground/validator/v10\n```\n\n---\n\n## üìñ Step 2: Define a DTO with Validation Rules\n\nUse annotations to define validation constraints on fields. Examples include `@NotNull`, `@Size`, and `@Pattern`.\n\n:::tabs\n@tab Java [icon=java]\n\n```java\npackage com.example.demo.dto;\n\nimport jakarta.validation.constraints.NotNull;\nimport jakarta.validation.constraints.Size;\nimport lombok.Data;\n\n@Data\npublic class TodoRequest {\n\n    @NotNull(message = \"Title is required\")\n    @Size(min = 3, max = 50, message = \"Title must be between 3 and 50 characters\")\n    private String title;\n\n    private boolean completed;\n}\n```\n\n@tab Kotlin [icon=kotlin]\n\n```kotlin\npackage com.example.demo.dto\n\nimport jakarta.validation.constraints.NotNull\nimport jakarta.validation.constraints.Size\n\ndata class TodoRequest(\n    @field:NotNull(message = \"Title is required\")\n    @field:Size(min = 3, max = 50, message = \"Title must be between 3 and 50 characters\")\n    val title: String?,\n\n    val completed: Boolean = false\n)\n```\n\n@tab Go [icon=go]\n\n```go\npackage dto\n\nimport (\n    \"github.com/go-playground/validator/v10\"\n)\n\ntype TodoRequest struct {\n    Title     string `validate:\"required,min=3,max=50\"`\n    Completed bool   `validate:\"\"`\n}\n\nvar validate = validator.New()\n\nfunc ValidateTodoRequest(todo TodoRequest) error {\n    return validate.Struct(todo)\n}\n```\n\n:::\n\n---\n\n## üìò Step 3: Create a Controller with Validation\n\nIntegrate validation into your REST endpoints.\n\n:::tabs\n@tab Java [icon=java]\n\n```java\npackage com.example.demo.controller;\n\nimport com.example.demo.dto.TodoRequest;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/api/todos\")\npublic class TodoController {\n\n    @PostMapping\n    public String createTodo(@Validated @RequestBody TodoRequest request) {\n        return \"Todo created: \" + request.getTitle();\n    }\n}\n```\n\n@tab Kotlin [icon=kotlin]\n\n```kotlin\npackage com.example.demo.controller\n\nimport com.example.demo.dto.TodoRequest\nimport org.springframework.validation.annotation.Validated\nimport org.springframework.web.bind.annotation.*\n\n@RestController\n@RequestMapping(\"/api/todos\")\nclass TodoController {\n\n    @PostMapping\n    fun createTodo(@Validated @RequestBody request: TodoRequest): String {\n        return \"Todo created: ${request.title}\"\n    }\n}\n```\n\n@tab Go [icon=go]\n\n```go\npackage controller\n\nimport (\n    \"dto\"\n    \"github.com/gin-gonic/gin\"\n    \"net/http\"\n)\n\nfunc CreateTodoHandler(c *gin.Context) {\n    var todo dto.TodoRequest\n\n    if err := c.ShouldBindJSON(&todo); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n        return\n    }\n\n    if err := dto.ValidateTodoRequest(todo); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n        return\n    }\n\n    c.JSON(http.StatusOK, gin.H{\"message\": \"Todo created\", \"title\": todo.Title})\n}\n```\n\n:::\n\n---\n\n## üìã Step 4: Handle Validation Errors\n\nCustomize error handling to return user-friendly responses.\n\n:::tabs\n@tab Java [icon=java]\n\n```java\npackage com.example.demo.exception;\n\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\nimport org.springframework.web.bind.MethodArgumentNotValidException;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n    @ExceptionHandler(MethodArgumentNotValidException.class)\n    public Map<String, String> handleValidationExceptions(MethodArgumentNotValidException ex) {\n        Map<String, String> errors = new HashMap<>();\n        ex.getBindingResult().getFieldErrors().forEach(error -> errors.put(error.getField(), error.getDefaultMessage()));\n        return errors;\n    }\n}\n```\n\n@tab Kotlin [icon=kotlin]\n\n```kotlin\npackage com.example.demo.exception\n\nimport org.springframework.http.HttpStatus\nimport org.springframework.web.bind.annotation.ExceptionHandler\nimport org.springframework.web.bind.annotation.RestControllerAdvice\nimport org.springframework.web.bind.MethodArgumentNotValidException\n\n@RestControllerAdvice\nclass GlobalExceptionHandler {\n\n    @ExceptionHandler(MethodArgumentNotValidException::class)\n    fun handleValidationExceptions(ex: MethodArgumentNotValidException): Map<String, String> {\n        return ex.bindingResult.fieldErrors.associate { it.field to it.defaultMessage.orEmpty() }\n    }\n}\n```\n\n@tab Go [icon=go]\n\n```go\npackage middleware\n\nimport (\n    \"github.com/gin-gonic/gin\"\n    \"net/http\"\n)\n\nfunc ErrorHandler() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        c.Next()\n\n        if len(c.Errors) > 0 {\n            c.JSON(http.StatusBadRequest, gin.H{\"errors\": c.Errors.JSON()})\n        }\n    }\n}\n```\n\n:::\n\n---\n\n## üåê main.go Example\n\nHere is an example of the `main.go` file for setting up a Gin application:\n\n```go\npackage main\n\nimport (\n\t\"controller\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\n\tr.POST(\"/api/todos\", controller.CreateTodoHandler)\n\n\tr.Run() // Start the server on http://localhost:8080\n}\n```\n\n---\n\n## ‚ñ∂Ô∏è Step 5: Run the Application\n\nTo run the application:\n\n### Spring Boot (Java/Kotlin)\n\nRun the Spring Boot application from your IDE or terminal:\n\n```bash\n./mvnw spring-boot:run # For Maven projects\n./gradlew bootRun       # For Gradle projects\n```\n\nAccess the API at `http://localhost:8080/api/todos`.\n\n### Gin (Go)\n\nRun the Go application:\n\n```bash\ngo run main.go\n```\n\nAccess the API at `http://localhost:8080/api/todos`.\n\n## üß™ Testing with cURL\n\nHere are some example cURL commands to test the API:\n\n- **POST a new Todo:**\n\n```bash\ncurl -X POST http://localhost:8080/api/todos \\\n-H \"Content-Type: application/json\" \\\n-d '{\"title\": \"New Task\", \"completed\": false}'\n```\n\n- **GET all Todos:**\n\n```bash\ncurl -X GET http://localhost:8080/api/todos\n```\n\n- **Handle Validation Errors:**\n\nSend an invalid request:\n\n```bash\ncurl -X POST http://localhost:8080/api/todos \\\n-H \"Content-Type: application/json\" \\\n-d '{\"title\": \"\"}'\n```\n\nYou should receive validation error messages as part of the response.\n","id":"rest-api-input-validation","title":"Input Validation in REST APIs","date":"2024-12-15","summary":"Learn how to implement input validation in REST APIs using Java, Kotlin, and Go with frameworks like Spring Boot and Gin. Covers annotations, custom validators, and error handling.","thumbnail":"/images/input-validation-thumbnail.webp","readingTime":"4 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"validation","name":"Validation","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},"posts":[{"id":"spring-boot-http-interface-client","title":"Spring Boot HTTP Interface Client","date":"2025-04-27","summary":"Learn how to use Spring Boot 3.2+ HTTP Interface Client for declarative, type-safe HTTP calls.","thumbnail":"/images/spring-boot-http-interface-thumbnail.webp","readingTime":"3 dk okuma","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"rest-api","name":"REST API","color":"blue"},{"id":"rest-client","name":"Rest Client","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-async-tasks-virtual","title":"Spring Boot Async Tasks with Virtual Thread","date":"2025-04-26","summary":"Learn how to run asynchronous tasks with `@Async` on JDK 21 virtual threads in Spring Boot.","thumbnail":"/images/spring-boot-async-virtual-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"async-tasks","name":"Async Tasks","color":"blue"},{"id":"virtual-thread","name":"Virtual Thread","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-ai","title":"Spring Boot AI Integration","date":"2025-04-23","summary":"Learn how to integrate AI models into Spring Boot applications using Spring AI for modular, portable, and observable AI workflows.","thumbnail":"/images/spring-boot-ai-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-ai","name":"Spring AI","color":"orange"},{"id":"ai","name":"Artificial Intelligence","color":"pink"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-jpa-auditing","title":"Spring Boot JPA Auditing","date":"2025-04-10","summary":"Learn how to automatically track created and modified fields in your Spring Boot applications using JPA Auditing.","thumbnail":"/images/spring-boot-jpa-auditing-thumbnail.webp","readingTime":"1 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-data","name":"Spring Data","color":"yellow"},{"id":"jpa","name":"JPA","color":"blue"},{"id":"auditing","name":"Auditing","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-tdd","title":"Spring Boot Test-Driven Development (TDD)","date":"2025-04-09","summary":"Learn how to apply TDD in Spring Boot by writing unit tests first, implementing logic, and ensuring code quality through testing.","thumbnail":"/images/spring-boot-tdd-thumbnail.webp","readingTime":"1 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"tdd","name":"TDD","color":"blue"},{"id":"testing","name":"Testing","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-circuit-breaker","title":"Spring Boot Circuit Breaker","date":"2025-03-13","summary":"Learn how to implement Circuit Breaker in Spring Boot applications for resilient microservices.","thumbnail":"/images/spring-boot-circuit-breaker-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-cloud","name":"Spring Cloud","color":"pink"},{"id":"circuit-breaker","name":"Circuit Breaker","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-eureka-server","title":"Spring Boot Eureka Server","date":"2025-02-23","summary":"Learn how to set up and configure a Spring Boot Eureka Server for service discovery in microservices architecture.","thumbnail":"/images/spring-boot-eureka-server-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-cloud","name":"Spring Cloud","color":"pink"},{"id":"eureka-server","name":"Eureka Server","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-config-server","title":"Spring Boot Config Server","date":"2025-02-22","summary":"Learn how to use Spring Boot Config Server to centralize and manage application configurations efficiently.","thumbnail":"/images/spring-boot-config-server-thumbnail.webp","readingTime":"4 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-cloud","name":"Spring Cloud","color":"pink"},{"id":"config-server","name":"Config Server","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-docker","title":"Spring Boot Docker Integration","date":"2025-02-21","summary":"Learn how to build and deploy Spring Boot applications using Docker with Buildpacks and Jib for efficient containerization.","thumbnail":"/images/spring-boot-docker-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"docker","name":"Docker","color":"blue"},{"id":"containerization","name":"Containerization","color":"orange"},{"id":"jib","name":"Jib","color":"pink"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-kubernetes","title":"Spring Boot Kubernetes Integration","date":"2025-02-21","summary":"Learn how to deploy Spring Boot applications on Kubernetes for scalable, containerized microservices.","thumbnail":"/images/spring-boot-kubernetes-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"kubernetes","name":"Kubernetes","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"containerization","name":"Containerization","color":"pink"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-async-tasks","title":"Spring Boot Async Tasks","date":"2025-02-20","summary":"Learn how to use @Async in Spring Boot to execute tasks asynchronously without blocking the main thread.","thumbnail":"/images/spring-boot-async-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"async-tasks","name":"Async Tasks","color":"blue"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-scheduled-tasks","title":"Spring Boot Scheduled Tasks","date":"2025-02-20","summary":"Learn how to use @Scheduled in Spring Boot to run background tasks at fixed intervals or cron expressions.","thumbnail":"/images/spring-boot-scheduled-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"scheduled-tasks","name":"Scheduled Tasks","color":"blue"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-reactive-programming","title":"Spring Boot Reactive Programming","date":"2025-02-19","summary":"Learn how to build reactive applications using Spring Boot with Project Reactor and WebFlux for high-performance asynchronous processing.","thumbnail":"/images/spring-boot-reactive-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"reactive-programming","name":"Reactive Programming","color":"blue"},{"id":"webflux","name":"Spring WebFlux","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-graalvm","title":"Spring Boot GraalVM Native Application","date":"2024-12-28","summary":"Learn how to build and deploy a Spring Boot application as a GraalVM native image for improved startup time and reduced resource usage.","thumbnail":"/images/spring-boot-graalvm-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"graalvm","name":"GraalVM","color":"pink"},{"id":"native-image","name":"Native Image","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-kafka","title":"Spring Boot Kafka Integration","date":"2024-12-25","summary":"Learn how to integrate Apache Kafka with Spring Boot to send and consume JSON messages through Kafka topics.","thumbnail":"/images/spring-boot-kafka-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"kafka","name":"Kafka","color":"orange"},{"id":"messaging","name":"Messaging","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-redis-caching","title":"Spring Boot Redis Caching","date":"2024-12-22","summary":"Learn how to implement Redis caching in your Spring Boot application to improve performance and efficiency.","thumbnail":"/images/spring-boot-redis-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"redis","name":"Redis","color":"orange"},{"id":"caching","name":"Caching","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-openapi","title":"Spring Boot with OpenAPI","date":"2024-12-20","summary":"Learn how to integrate OpenAPI into your Spring Boot application for API documentation and testing using SpringDoc.","thumbnail":"/images/spring-boot-openapi-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"openapi","name":"OpenAPI","color":"orange"},{"id":"documentation","name":"Documentation","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-clean-coding","title":"Clean Coding Practices in Spring Boot","date":"2024-12-19","summary":"Learn how to apply clean coding principles in Spring Boot projects. Includes best practices, examples, and benefits of using Lombok in Java and Kotlin clean code techniques.","thumbnail":"/images/spring-boot-clean-coding-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"clean-coding","name":"Clean Coding","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-devtools","title":"Spring Boot DevTools","date":"2024-12-19","summary":"Learn how to utilize Spring Boot DevTools for rapid development. Includes live reload, caching, and debugging tips.","thumbnail":"/images/spring-boot-devtools-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"devtools","name":"Dev Tools","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-actuator","title":"Spring Boot Actuator","date":"2024-12-18","summary":"Learn how to use Spring Boot Actuator to monitor and manage your applications with ease. Includes endpoints, customization, and security examples.","thumbnail":"/images/spring-boot-actuator-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"actuator","name":"Actuator","color":"orange"},{"id":"monitoring","name":"Monitoring","color":"purple"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-aop","title":"Aspect-Oriented Programming (AOP) in Spring Boot","date":"2024-12-18","summary":"Learn how to implement Aspect-Oriented Programming (AOP) in Spring Boot using Java and Kotlin. Covers core concepts, use cases, and practical examples.","thumbnail":"/images/spring-boot-aop-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"aop","name":"AOP","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-di","title":"Dependency Injection in Spring Boot","date":"2024-12-18","summary":"Learn how Dependency Injection (DI) works in Spring Boot, including examples in Java and Kotlin. Covers key concepts, annotations, and practical use cases.","thumbnail":"/images/spring-boot-di-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"dependency-injection","name":"Dependency Injection","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"object-relational-mapping","title":"Object-Relational Mapping (ORM)","date":"2024-12-16","summary":"Learn how to set up an ORM-based application with Spring Boot using Java, Kotlin, and Go (Gin). Includes PostgreSQL integration and basic CRUD operations.","thumbnail":"/images/orm-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"orm","name":"ORM","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"rest-api-input-validation","title":"Input Validation in REST APIs","date":"2024-12-15","summary":"Learn how to implement input validation in REST APIs using Java, Kotlin, and Go with frameworks like Spring Boot and Gin. Covers annotations, custom validators, and error handling.","thumbnail":"/images/input-validation-thumbnail.webp","readingTime":"4 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"validation","name":"Validation","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-graphql","title":"Building APIs with Spring for GraphQL","date":"2024-12-15","summary":"Learn how to build GraphQL APIs using Spring for GraphQL with Java and Kotlin. Includes schema creation, query handling, and integration.","thumbnail":"/images/spring-boot-graphql-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"graphql","name":"GraphQL","color":"pink"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"golang-gin-first-application","title":"Gin - First Application","date":"2024-12-14","summary":"A beginner-friendly guide to creating your first Golang Gin application from scratch. Learn the basics and start your journey with Gin.","thumbnail":"/images/golang-gin-first-app-thumbnail.webp","readingTime":"1 min read","topics":[{"id":"go","name":"Go","color":"brown"},{"id":"gin","name":"Gin","color":"green"},{"id":"beginner-guide","name":"Beginner Guide","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"building-a-rest-api-with-spring-boot","title":"Building a REST API with Spring Boot","date":"2024-12-11","summary":"Learn how to create a REST API using Spring Boot. Includes HTTP methods, JSON handling, Lombok integration, and curl for testing.","thumbnail":"/images/spring-boot-rest-api-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"rest-api","name":"REST API","color":"blue"},{"id":"programming","name":"Programming","color":"orange"}]},{"id":"spring-boot-first-application","title":"Spring Boot - First Application","date":"2024-12-10","summary":"A beginner-friendly guide to creating your first Spring Boot application from scratch. Learn the basics and start your journey with Spring Boot.","thumbnail":"/images/spring-boot-first-app-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"beginner-guide","name":"Beginner Guide","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]}]},"__N_SSG":true}