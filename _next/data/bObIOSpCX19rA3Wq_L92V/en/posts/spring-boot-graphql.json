{"pageProps":{"_nextI18Next":{"initialI18nStore":{"en":{"common":{"common":{"siteName":"≈ûuayb ≈ûim≈üek's Blog","language":"Language","theme":"Theme","header":{"logoAlt":"≈ûuayb's Blog Logo","title":"≈ûuayb's Blog","menu":{"home":"Home","about":"About","contact":"Contact","search":"Search"},"themeToggle":"Toggle Theme","theme":{"light":"Light Mode","dark":"Dark Mode"}},"sidebar":{"title":"Topics","loading":"Loading more topics..."},"footer":{"text":"¬© {{year}} ≈ûuayb's Blog. All rights reserved."},"pagination":{"pageSize":"Page size","showingResults":"Showing {{start}}‚Äì{{end}} of {{total}} results"},"searchBar":{"placeholder":"Search"},"sort":{"newest":"Newest First","oldest":"Oldest First"},"contactInfo":{"email":"Email"},"codeBlock":{"copy":"Copy","copied":"Copied!"},"selected":"Selected","selectAll":"Select All","clearAll":"Clear All","noResults":"No results found","andMore":"and {{count}} more","datePicker":{"selectDate":"Select Date","today":"Today","yesterday":"Yesterday","last7Days":"Last 7 Days","last30Days":"Last 30 Days","customDate":"Custom Date","startDatePlaceholder":"Start Date","endDatePlaceholder":"End Date","startDateLabel":"Start Date","endDateLabel":"End Date","clearSelection":"Clear Selection","applySelection":"Apply Selection"},"validation":{"required":"This field is required.","minlength":"This field must be at least {{ min }} characters.","maxlength":"This field cannot be longer than {{ max }} characters.","min":"This field should be at least {{ min }}.","max":"This field cannot be more than {{ max }}.","minbytes":"This field should be at least {{ min }} bytes.","maxbytes":"This field cannot be more than {{ max }} bytes.","pattern":"This field should match the pattern for {{ pattern }}.","number":"This field should be a number.","datetimelocal":"This field should be a date and time.","patternLogin":"This field can only contain letters, digits, and e-mail addresses.","email":"Please enter a valid email address.","url":"Please enter a valid URL.","alpha":"This field should only contain letters.","alphanumeric":"This field should only contain letters and numbers.","passwordStrength":"Password must contain at least 8 characters, including an uppercase letter, a number, and a special character.","startDateAfterEndDate":"Start date cannot be after end date.","endDateBeforeStartDate":"End date cannot be before start date."},"viewAllResults":"See all results for \"{{query}}\""}},"post":{"post":{"readMore":"Read More","noPostsFound":"No posts found."}}}},"initialLocale":"en","ns":["common","post"],"userConfig":{"debug":false,"i18n":{"defaultLocale":"en","locales":["en","tr"]},"localePath":"/home/circleci/project/public/locales","default":{"debug":false,"i18n":{"defaultLocale":"en","locales":["en","tr"]},"localePath":"/home/circleci/project/public/locales"}}},"post":{"contentHtml":"\nSpring for GraphQL simplifies the development of GraphQL APIs by integrating with Spring Boot. This guide demonstrates how to create a GraphQL API using Java and Kotlin, with examples for schema definition, query handling, and dependency injection.\n\n---\n\n## üåü Why Use GraphQL?\n\nGraphQL allows clients to request specific data, reducing over-fetching and under-fetching compared to REST. It also supports strong typing and facilitates efficient data fetching, making it a popular choice for modern APIs.\n\n---\n\n## üåü Prerequisites\n\nüìã Ensure you have the following:\n\n- ‚òï **Java Development Kit (JDK)** 17+\n- üì¶ **Maven or Gradle** installed\n- üî§ A **Java IDE** (e.g., IntelliJ IDEA, Eclipse)\n\n---\n\n## üõ†Ô∏è Step 1: Add Dependencies\n\nInclude the following dependencies in your project to enable Spring for GraphQL.\n\n- **Maven:**\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-graphql</artifactId>\n</dependency>\n```\n\n- **Gradle:**\n\n```groovy\nimplementation 'org.springframework.boot:spring-boot-starter-graphql'\n```\n\n---\n\n## üìã Step 2: Define the GraphQL Schema\n\nCreate a schema file named `schema.graphqls` under the `src/main/resources/graphql` directory.\n\n```graphql\ntype Query {\n  getUser(id: ID!): User\n  getUsers: [User]\n}\n\ntype User {\n  id: ID!\n  name: String!\n  email: String!\n}\n```\n\n---\n\n## üìñ Step 3: Implement the Data Model and Services\n\nDefine the data model and service layer for handling queries.\n\n:::tabs\n@tab Java [icon=java]\n\n### Entity\n\n```java\npackage com.example.demo.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n    private String id;\n    private String name;\n    private String email;\n}\n```\n\n### Service\n\n```java\npackage com.example.demo.service;\n\nimport com.example.demo.model.User;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\nimport java.util.stream.Stream;\n\n@Service\npublic class UserService {\n\n    private final Map<String, User> userData = Stream.of(\n        new User(\"1\", \"Alice\", \"alice@example.com\"),\n        new User(\"2\", \"Bob\", \"bob@example.com\")\n    ).collect(Collectors.toMap(User::getId, user -> user));\n\n    public User getUser(String id) {\n        return userData.get(id);\n    }\n\n    public List<User> getUsers() {\n        return List.copyOf(userData.values());\n    }\n}\n```\n\n---\n\n@tab Kotlin [icon=kotlin]\n\n### Entity\n\n```kotlin\npackage com.example.demo.model\n\ndata class User(\n    val id: String,\n    val name: String,\n    val email: String\n)\n```\n\n### Service\n\n```kotlin\npackage com.example.demo.service\n\nimport com.example.demo.model.User\nimport org.springframework.stereotype.Service\n\n@Service\nclass UserService {\n\n    private val userData = mapOf(\n        \"1\" to User(\"1\", \"Alice\", \"alice@example.com\"),\n        \"2\" to User(\"2\", \"Bob\", \"bob@example.com\")\n    )\n\n    fun getUser(id: String): User? = userData[id]\n\n    fun getUsers(): List<User> = userData.values.toList()\n}\n```\n\n:::\n\n---\n\n## üìò Step 4: Implement GraphQL Controllers\n\nControllers handle GraphQL queries and mutations. Use the `@Controller` annotation in Spring for GraphQL.\n\n:::tabs\n@tab Java [icon=java]\n\n```java\npackage com.example.demo.controller;\n\nimport com.example.demo.model.User;\nimport com.example.demo.service.UserService;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.graphql.data.method.annotation.QueryMapping;\nimport org.springframework.stereotype.Controller;\n\nimport java.util.List;\n\n@Controller\n@RequiredArgsConstructor\npublic class UserController {\n\n    private final UserService userService;\n\n    @QueryMapping\n    public User getUser(String id) {\n        return userService.getUser(id);\n    }\n\n    @QueryMapping\n    public List<User> getUsers() {\n        return userService.getUsers();\n    }\n}\n```\n\n---\n\n@tab Kotlin [icon=kotlin]\n\n```kotlin\npackage com.example.demo.controller\n\nimport com.example.demo.model.User\nimport com.example.demo.service.UserService\nimport org.springframework.graphql.data.method.annotation.QueryMapping\nimport org.springframework.stereotype.Controller\n\n@Controller\nclass UserController(\n    private val userService: UserService\n) {\n\n    @QueryMapping\n    fun getUser(id: String): User? = userService.getUser(id)\n\n    @QueryMapping\n    fun getUsers(): List<User> = userService.getUsers()\n}\n```\n\n:::\n\n---\n\n## ‚ñ∂Ô∏è Running the Application\n\nRun the application using the following commands:\n\n- **Spring Boot (Java/Kotlin):**\n\n  ```bash\n  ./mvnw spring-boot:run\n  ```\n\nAccess the GraphQL Playground at `http://localhost:8080/graphiql` to test your API.\n\n---\n\n## üß™ Testing the GraphQL API\n\nHere are some example queries to test your API:\n\n- **Fetch a user by ID:**\n\n```graphql\nquery {\n  getUser(id: \"1\") {\n    id\n    name\n    email\n  }\n}\n```\n\n- **Fetch all users:**\n\n```graphql\nquery {\n  getUsers {\n    id\n    name\n    email\n  }\n}\n```\n\n---\n\nThis guide demonstrates how to build powerful and flexible GraphQL APIs using Spring for GraphQL with Java and Kotlin. Leverage GraphQL‚Äôs advantages to make your project more efficient and user-friendly.\n","id":"spring-boot-graphql","title":"Building APIs with Spring for GraphQL","date":"2024-12-15","summary":"Learn how to build GraphQL APIs using Spring for GraphQL with Java and Kotlin. Includes schema creation, query handling, and integration.","thumbnail":"/images/spring-boot-graphql-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"graphql","name":"GraphQL","color":"pink"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"programming","name":"Programming","color":"blue"}]},"posts":[{"id":"spring-boot-http-interface-client","title":"Spring Boot HTTP Interface Client","date":"2025-04-27","summary":"Learn how to use Spring Boot 3.2+ HTTP Interface Client for declarative, type-safe HTTP calls.","thumbnail":"/images/spring-boot-http-interface-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"rest-api","name":"REST API","color":"blue"},{"id":"rest-client","name":"Rest Client","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-async-tasks-virtual","title":"Spring Boot Async Tasks with Virtual Thread","date":"2025-04-26","summary":"Learn how to run asynchronous tasks with `@Async` on JDK 21 virtual threads in Spring Boot.","thumbnail":"/images/spring-boot-async-virtual-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"async-tasks","name":"Async Tasks","color":"blue"},{"id":"virtual-thread","name":"Virtual Thread","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-ai","title":"Spring Boot AI Integration","date":"2025-04-23","summary":"Learn how to integrate AI models into Spring Boot applications using Spring AI for modular, portable, and observable AI workflows.","thumbnail":"/images/spring-boot-ai-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-ai","name":"Spring AI","color":"orange"},{"id":"ai","name":"Artificial Intelligence","color":"pink"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-jpa-auditing","title":"Spring Boot JPA Auditing","date":"2025-04-10","summary":"Learn how to automatically track created and modified fields in your Spring Boot applications using JPA Auditing.","thumbnail":"/images/spring-boot-jpa-auditing-thumbnail.webp","readingTime":"1 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-data","name":"Spring Data","color":"yellow"},{"id":"jpa","name":"JPA","color":"blue"},{"id":"auditing","name":"Auditing","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-tdd","title":"Spring Boot Test-Driven Development (TDD)","date":"2025-04-09","summary":"Learn how to apply TDD in Spring Boot by writing unit tests first, implementing logic, and ensuring code quality through testing.","thumbnail":"/images/spring-boot-tdd-thumbnail.webp","readingTime":"1 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"tdd","name":"TDD","color":"blue"},{"id":"testing","name":"Testing","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-circuit-breaker","title":"Spring Boot Circuit Breaker","date":"2025-03-13","summary":"Learn how to implement Circuit Breaker in Spring Boot applications for resilient microservices.","thumbnail":"/images/spring-boot-circuit-breaker-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-cloud","name":"Spring Cloud","color":"pink"},{"id":"circuit-breaker","name":"Circuit Breaker","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-eureka-server","title":"Spring Boot Eureka Server","date":"2025-02-23","summary":"Learn how to set up and configure a Spring Boot Eureka Server for service discovery in microservices architecture.","thumbnail":"/images/spring-boot-eureka-server-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-cloud","name":"Spring Cloud","color":"pink"},{"id":"eureka-server","name":"Eureka Server","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-config-server","title":"Spring Boot Config Server","date":"2025-02-22","summary":"Learn how to use Spring Boot Config Server to centralize and manage application configurations efficiently.","thumbnail":"/images/spring-boot-config-server-thumbnail.webp","readingTime":"4 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"spring-cloud","name":"Spring Cloud","color":"pink"},{"id":"config-server","name":"Config Server","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-docker","title":"Spring Boot Docker Integration","date":"2025-02-21","summary":"Learn how to build and deploy Spring Boot applications using Docker with Buildpacks and Jib for efficient containerization.","thumbnail":"/images/spring-boot-docker-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"docker","name":"Docker","color":"blue"},{"id":"containerization","name":"Containerization","color":"orange"},{"id":"jib","name":"Jib","color":"pink"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-kubernetes","title":"Spring Boot Kubernetes Integration","date":"2025-02-21","summary":"Learn how to deploy Spring Boot applications on Kubernetes for scalable, containerized microservices.","thumbnail":"/images/spring-boot-kubernetes-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"kubernetes","name":"Kubernetes","color":"blue"},{"id":"microservice","name":"Microservice","color":"orange"},{"id":"containerization","name":"Containerization","color":"pink"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-async-tasks","title":"Spring Boot Async Tasks","date":"2025-02-20","summary":"Learn how to use @Async in Spring Boot to execute tasks asynchronously without blocking the main thread.","thumbnail":"/images/spring-boot-async-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"async-tasks","name":"Async Tasks","color":"blue"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-scheduled-tasks","title":"Spring Boot Scheduled Tasks","date":"2025-02-20","summary":"Learn how to use @Scheduled in Spring Boot to run background tasks at fixed intervals or cron expressions.","thumbnail":"/images/spring-boot-scheduled-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"scheduled-tasks","name":"Scheduled Tasks","color":"blue"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-reactive-programming","title":"Spring Boot Reactive Programming","date":"2025-02-19","summary":"Learn how to build reactive applications using Spring Boot with Project Reactor and WebFlux for high-performance asynchronous processing.","thumbnail":"/images/spring-boot-reactive-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"reactive-programming","name":"Reactive Programming","color":"blue"},{"id":"webflux","name":"Spring WebFlux","color":"orange"},{"id":"programming","name":"Programming","color":"brown"}]},{"id":"spring-boot-graalvm","title":"Spring Boot GraalVM Native Application","date":"2024-12-28","summary":"Learn how to build and deploy a Spring Boot application as a GraalVM native image for improved startup time and reduced resource usage.","thumbnail":"/images/spring-boot-graalvm-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"graalvm","name":"GraalVM","color":"pink"},{"id":"native-image","name":"Native Image","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-kafka","title":"Spring Boot Kafka Integration","date":"2024-12-25","summary":"Learn how to integrate Apache Kafka with Spring Boot to send and consume JSON messages through Kafka topics.","thumbnail":"/images/spring-boot-kafka-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"kafka","name":"Kafka","color":"orange"},{"id":"messaging","name":"Messaging","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-redis-caching","title":"Spring Boot Redis Caching","date":"2024-12-22","summary":"Learn how to implement Redis caching in your Spring Boot application to improve performance and efficiency.","thumbnail":"/images/spring-boot-redis-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"redis","name":"Redis","color":"orange"},{"id":"caching","name":"Caching","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-openapi","title":"Spring Boot with OpenAPI","date":"2024-12-20","summary":"Learn how to integrate OpenAPI into your Spring Boot application for API documentation and testing using SpringDoc.","thumbnail":"/images/spring-boot-openapi-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"openapi","name":"OpenAPI","color":"orange"},{"id":"documentation","name":"Documentation","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-clean-coding","title":"Clean Coding Practices in Spring Boot","date":"2024-12-19","summary":"Learn how to apply clean coding principles in Spring Boot projects. Includes best practices, examples, and benefits of using Lombok in Java and Kotlin clean code techniques.","thumbnail":"/images/spring-boot-clean-coding-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"clean-coding","name":"Clean Coding","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-devtools","title":"Spring Boot DevTools","date":"2024-12-19","summary":"Learn how to utilize Spring Boot DevTools for rapid development. Includes live reload, caching, and debugging tips.","thumbnail":"/images/spring-boot-devtools-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"devtools","name":"Dev Tools","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-actuator","title":"Spring Boot Actuator","date":"2024-12-18","summary":"Learn how to use Spring Boot Actuator to monitor and manage your applications with ease. Includes endpoints, customization, and security examples.","thumbnail":"/images/spring-boot-actuator-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"actuator","name":"Actuator","color":"orange"},{"id":"monitoring","name":"Monitoring","color":"purple"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-aop","title":"Aspect-Oriented Programming (AOP) in Spring Boot","date":"2024-12-18","summary":"Learn how to implement Aspect-Oriented Programming (AOP) in Spring Boot using Java and Kotlin. Covers core concepts, use cases, and practical examples.","thumbnail":"/images/spring-boot-aop-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"aop","name":"AOP","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-di","title":"Dependency Injection in Spring Boot","date":"2024-12-18","summary":"Learn how Dependency Injection (DI) works in Spring Boot, including examples in Java and Kotlin. Covers key concepts, annotations, and practical use cases.","thumbnail":"/images/spring-boot-di-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"dependency-injection","name":"Dependency Injection","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"object-relational-mapping","title":"Object-Relational Mapping (ORM)","date":"2024-12-16","summary":"Learn how to set up an ORM-based application with Spring Boot using Java, Kotlin, and Go (Gin). Includes PostgreSQL integration and basic CRUD operations.","thumbnail":"/images/orm-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"orm","name":"ORM","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"rest-api-input-validation","title":"Input Validation in REST APIs","date":"2024-12-15","summary":"Learn how to implement input validation in REST APIs using Java, Kotlin, and Go with frameworks like Spring Boot and Gin. Covers annotations, custom validators, and error handling.","thumbnail":"/images/input-validation-thumbnail.webp","readingTime":"4 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"validation","name":"Validation","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-graphql","title":"Building APIs with Spring for GraphQL","date":"2024-12-15","summary":"Learn how to build GraphQL APIs using Spring for GraphQL with Java and Kotlin. Includes schema creation, query handling, and integration.","thumbnail":"/images/spring-boot-graphql-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"graphql","name":"GraphQL","color":"pink"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"golang-gin-first-application","title":"Gin - First Application","date":"2024-12-14","summary":"A beginner-friendly guide to creating your first Golang Gin application from scratch. Learn the basics and start your journey with Gin.","thumbnail":"/images/golang-gin-first-app-thumbnail.webp","readingTime":"1 min read","topics":[{"id":"go","name":"Go","color":"brown"},{"id":"gin","name":"Gin","color":"green"},{"id":"beginner-guide","name":"Beginner Guide","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"building-a-rest-api-with-spring-boot","title":"Building a REST API with Spring Boot","date":"2024-12-11","summary":"Learn how to create a REST API using Spring Boot. Includes HTTP methods, JSON handling, Lombok integration, and curl for testing.","thumbnail":"/images/spring-boot-rest-api-thumbnail.webp","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"rest-api","name":"REST API","color":"blue"},{"id":"programming","name":"Programming","color":"orange"}]},{"id":"spring-boot-first-application","title":"Spring Boot - First Application","date":"2024-12-10","summary":"A beginner-friendly guide to creating your first Spring Boot application from scratch. Learn the basics and start your journey with Spring Boot.","thumbnail":"/images/spring-boot-first-app-thumbnail.webp","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"beginner-guide","name":"Beginner Guide","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]}]},"__N_SSG":true}