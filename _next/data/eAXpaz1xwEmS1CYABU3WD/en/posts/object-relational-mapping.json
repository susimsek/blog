{"pageProps":{"_nextI18Next":{"initialI18nStore":{"en":{"common":{"common":{"language":"Language","theme":"Theme","header":{"logoAlt":"My Blog Logo","title":"My Blog","menu":{"home":"Home","about":"About","contact":"Contact"},"themeToggle":"Toggle Theme","theme":{"light":"Light Mode","dark":"Dark Mode"}},"sidebar":{"title":"Topics","loading":"Loading more topics..."},"footer":{"text":"¬© {{year}} My Blog. All rights reserved."},"pagination":{"pageSize":"Page size","showingResults":"Showing {{start}}‚Äì{{end}} of {{total}} results"},"searchBar":{"placeholder":"Search"},"sort":{"newest":"Newest First","oldest":"Oldest First"},"contactInfo":{"email":"Email"},"codeBlock":{"copy":"Copy","copied":"Copied!"},"selected":"Selected","selectAll":"Select All","clearAll":"Clear All","noResults":"No results found","andMore":"and {{count}} more","datePicker":{"selectDate":"Select Date","today":"Today","yesterday":"Yesterday","last7Days":"Last 7 Days","last30Days":"Last 30 Days","customDate":"Custom Date","startDatePlaceholder":"Start Date","endDatePlaceholder":"End Date","startDateLabel":"Start Date","endDateLabel":"End Date","clearSelection":"Clear Selection","applySelection":"Apply Selection"},"validation":{"required":"This field is required.","minlength":"This field must be at least {{ min }} characters.","maxlength":"This field cannot be longer than {{ max }} characters.","min":"This field should be at least {{ min }}.","max":"This field cannot be more than {{ max }}.","minbytes":"This field should be at least {{ min }} bytes.","maxbytes":"This field cannot be more than {{ max }} bytes.","pattern":"This field should match the pattern for {{ pattern }}.","number":"This field should be a number.","datetimelocal":"This field should be a date and time.","patternLogin":"This field can only contain letters, digits, and e-mail addresses.","email":"Please enter a valid email address.","url":"Please enter a valid URL.","alpha":"This field should only contain letters.","alphanumeric":"This field should only contain letters and numbers.","passwordStrength":"Password must contain at least 8 characters, including an uppercase letter, a number, and a special character.","startDateAfterEndDate":"Start date cannot be after end date.","endDateBeforeStartDate":"End date cannot be before start date."},"viewAllResults":"See all results for \"{{query}}\""}},"post":{"post":{"readMore":"Read More","noPostsFound":"No posts found."}}}},"initialLocale":"en","ns":["common","post"],"userConfig":{"debug":false,"i18n":{"defaultLocale":"en","locales":["en","tr"]},"localePath":"/home/runner/work/blog/blog/public/locales","default":{"debug":false,"i18n":{"defaultLocale":"en","locales":["en","tr"]},"localePath":"/home/runner/work/blog/blog/public/locales"}}},"post":{"contentHtml":"\nObject-Relational Mapping (ORM) simplifies database operations in modern applications. This guide will show you how to set up ORM with PostgreSQL using Spring Boot and the Gin framework.\n\n---\n\n## üåü Why Use ORM?\n\nORM bridges the gap between object-oriented programming and relational databases by mapping objects directly to database tables. This eliminates the need for manual SQL queries, reducing errors and increasing productivity for developers.\n\n---\n\n## üåü Prerequisites\n\nüìã Ensure you have the following:\n\n- ‚òï **Java Development Kit (JDK)** 17+\n- üì¶ **Maven or Gradle** installed\n- üñ•Ô∏è A **Java IDE**\n- üêò **PostgreSQL** installed and running\n\nFor **Go**:\n\n- üîß **Golang** 1.17+ installed\n- üîÑ **go.mod** initialized in your project\n\n---\n\n## üõ†Ô∏è Step 1: Add Dependencies\n\nTo set up a Spring Boot project and integrate ORM, follow these steps:\n\n### Add Dependencies\n\nFor Spring Boot projects, include the following dependencies in your project:\n\n- **Maven:**\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>\n<dependency>\n  <groupId>org.postgresql</groupId>\n  <artifactId>postgresql</artifactId>\n</dependency>\n```\n\n- **Gradle:**\n\n```groovy\nimplementation 'org.springframework.boot:spring-boot-starter-data-jpa'\nimplementation 'org.postgresql:postgresql'\n```\n\n### Configure the Database\n\nSet up your PostgreSQL connection in the `application.properties` or `application.yml` file:\n\n```properties\nspring.datasource.url=jdbc:postgresql://localhost:5432/demo\nspring.datasource.username=your_username\nspring.datasource.password=your_password\nspring.jpa.hibernate.ddl-auto=update\n```\n\n### Initialize the Project\n\nIf you haven't already, create your Spring Boot project using [Spring Initializr](https://start.spring.io/):\n\n1. Choose **Spring Web**, **Spring Data JPA**, and **PostgreSQL Driver** as dependencies.\n2. Download the project and import it into your preferred IDE.\n\nFor Go projects:\n\n- **Install Gin Framework and GORM:**\n\n```bash\n# Install the Gin framework\ngo get -u github.com/gin-gonic/gin\n\n# Install the GORM PostgreSQL driver\ngo get -u gorm.io/driver/postgres\n\n# Install the GORM ORM library\ngo get -u gorm.io/gorm\n```\n\n---\n\n## üìã Step 2: Define the Model and Implement the REST Controller\n\nThis step combines creating the entity/model, repository, and REST controllers.\n\n:::tabs\n@tab Java [icon=java]\n\n### Entity\n\n```java\npackage com.example.demo.entity;\n\nimport jakarta.persistence.*;\nimport lombok.Data;\n\n@Data\n@Entity\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String name;\n\n    private String email;\n}\n```\n\n### Repository\n\n```java\npackage com.example.demo.repository;\n\nimport com.example.demo.entity.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface UserRepository extends JpaRepository<User, Long> {\n}\n```\n\n### REST Controller\n\n```java\npackage com.example.demo.controller;\n\nimport com.example.demo.entity.User;\nimport com.example.demo.repository.UserRepository;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/users\")\nimport lombok.RequiredArgsConstructor;\n\n@RequiredArgsConstructor\npublic class UserController {\n\n  private final UserRepository userRepository;\n\n  @GetMapping\n  public List<User> getAllUsers() {\n    return userRepository.findAll();\n  }\n\n  @PostMapping\n  public User createUser(@RequestBody User user) {\n    return userRepository.save(user);\n  }\n}\n```\n\n@tab Kotlin [icon=kotlin]\n\n### Entity\n\n```kotlin\npackage com.example.demo.entity\n\nimport jakarta.persistence.*\n\n@Entity\nclass User(\n  @Id\n  @GeneratedValue(strategy = GenerationType.IDENTITY)\n  val id: Long = 0,\n\n  var name: String,\n\n  var email: String\n)\n```\n\n### Repository\n\n```kotlin\npackage com.example.demo.repository\n\nimport com.example.demo.entity.User\nimport org.springframework.data.jpa.repository.JpaRepository\n\ninterface UserRepository : JpaRepository<User, Long>\n```\n\n### REST Controller\n\n```kotlin\npackage com.example.demo.controller\n\nimport com.example.demo.entity.User\nimport com.example.demo.repository.UserRepository\nimport org.springframework.web.bind.annotation.*\n\n@RestController\n@RequestMapping(\"/api/users\")\nclass UserController(\n  private val userRepository: UserRepository\n) {\n\n  @GetMapping\n  fun getAllUsers(): List<User> = userRepository.findAll()\n\n  @PostMapping\n  fun createUser(@RequestBody user: User): User = userRepository.save(user)\n}\n```\n\n@tab Go [icon=go]\n\n### Model and Database Connection\n\n```go\npackage main\n\nimport (\n\t\"gorm.io/driver/postgres\"\n\t\"gorm.io/gorm\"\n)\n\nvar DB *gorm.DB\n\nfunc connectDatabase() {\n\tdsn := \"host=localhost user=your_username password=your_password dbname=demo port=5432 sslmode=disable\"\n\tdb, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})\n\tif err != nil {\n\t\tpanic(\"Failed to connect to database!\")\n\t}\n\n\tDB = db\n\tDB.AutoMigrate(&User{})\n}\n\ntype User struct {\n\tID    uint   `json:\"id\" gorm:\"primaryKey\"`\n\tName  string `json:\"name\"`\n\tEmail string `json:\"email\"`\n}\n```\n\n### Handlers\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc getUsers(c *gin.Context) {\n\tvar users []User\n\tDB.Find(&users)\n\tc.JSON(200, users)\n}\n\nfunc createUser(c *gin.Context) {\n\tvar user User\n\tif err := c.ShouldBindJSON(&user); err != nil {\n\t\tc.JSON(400, gin.H{\"error\": err.Error()})\n\t\treturn\n\t}\n\tDB.Create(&user)\n\tc.JSON(201, user)\n}\n\nfunc main() {\n\tr := gin.Default()\n\tconnectDatabase()\n\n\tr.GET(\"/api/users\", getUsers)\n\tr.POST(\"/api/users\", createUser)\n\n\tr.Run() // Listen and serve on 0.0.0.0:8080\n}\n```\n\n:::\n\n---\n\n## ‚ñ∂Ô∏è Running the Applications\n\n- **Spring Boot:**\n\n  ```bash\n  ./mvnw spring-boot:run\n  ```\n\n- **Gin:**\n\n  ```bash\n  go run main.go\n  ```\n\n---\n\n## üß™ Testing with cURL\n\nYou can test the API using the following cURL commands:\n\n**Fetch All Users:**\n\n```bash\ncurl -X GET http://localhost:8080/api/users\n```\n\n**Create a New User:**\n\n```bash\ncurl -X POST http://localhost:8080/api/users \\\n-H \"Content-Type: application/json\" \\\n-d '{\"name\": \"John Doe\", \"email\": \"johndoe@example.com\"}'\n```\n\n---\n\nThis guide demonstrates how to use ORM for PostgreSQL in Spring Boot with Java, Kotlin, and Gin.\n","id":"object-relational-mapping","title":"Object-Relational Mapping (ORM)","date":"2024-12-16","summary":"Learn how to set up an ORM-based application with Spring Boot using Java, Kotlin, and Go (Gin). Includes PostgreSQL integration and basic CRUD operations.","thumbnail":"/images/orm-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"orm","name":"ORM","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},"posts":[{"id":"spring-boot-graalvm","title":"Spring Boot GraalVM Native Application","date":"2024-12-28","summary":"Learn how to build and deploy a Spring Boot application as a GraalVM native image for improved startup time and reduced resource usage.","thumbnail":"/images/spring-boot-graalvm-thumbnail.jpg","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"graalvm","name":"GraalVM","color":"pink"},{"id":"native-image","name":"Native Image","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-kafka","title":"Spring Boot Kafka Integration","date":"2024-12-25","summary":"Learn how to integrate Apache Kafka with Spring Boot to send and consume JSON messages through Kafka topics.","thumbnail":"/images/spring-boot-kafka-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"kafka","name":"Kafka","color":"orange"},{"id":"messaging","name":"Messaging","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-redis-caching","title":"Spring Boot Redis Caching","date":"2024-12-22","summary":"Learn how to implement Redis caching in your Spring Boot application to improve performance and efficiency.","thumbnail":"/images/spring-boot-redis-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"redis","name":"Redis","color":"orange"},{"id":"caching","name":"Caching","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-openapi","title":"Spring Boot with OpenAPI","date":"2024-12-20","summary":"Learn how to integrate OpenAPI into your Spring Boot application for API documentation and testing using SpringDoc.","thumbnail":"/images/spring-boot-openapi-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"openapi","name":"OpenAPI","color":"orange"},{"id":"documentation","name":"Documentation","color":"brown"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-clean-coding","title":"Clean Coding Practices in Spring Boot","date":"2024-12-19","summary":"Learn how to apply clean coding principles in Spring Boot projects. Includes best practices, examples, and benefits of using Lombok in Java and Kotlin clean code techniques.","thumbnail":"/images/spring-boot-clean-coding-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"clean-coding","name":"Clean Coding","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-devtools","title":"Spring Boot DevTools","date":"2024-12-19","summary":"Learn how to utilize Spring Boot DevTools for rapid development. Includes live reload, caching, and debugging tips.","thumbnail":"/images/spring-boot-devtools-thumbnail.jpg","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"devtools","name":"Dev Tools","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-actuator","title":"Spring Boot Actuator","date":"2024-12-18","summary":"Learn how to use Spring Boot Actuator to monitor and manage your applications with ease. Includes endpoints, customization, and security examples.","thumbnail":"/images/spring-boot-actuator-thumbnail.jpg","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"actuator","name":"Actuator","color":"orange"},{"id":"monitoring","name":"Monitoring","color":"purple"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-aop","title":"Aspect-Oriented Programming (AOP) in Spring Boot","date":"2024-12-18","summary":"Learn how to implement Aspect-Oriented Programming (AOP) in Spring Boot using Java and Kotlin. Covers core concepts, use cases, and practical examples.","thumbnail":"/images/spring-boot-aop-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"aop","name":"AOP","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-di","title":"Dependency Injection in Spring Boot","date":"2024-12-18","summary":"Learn how Dependency Injection (DI) works in Spring Boot, including examples in Java and Kotlin. Covers key concepts, annotations, and practical use cases.","thumbnail":"/images/spring-boot-di-thumbnail.jpg","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"dependency-injection","name":"Dependency Injection","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"object-relational-mapping","title":"Object-Relational Mapping (ORM)","date":"2024-12-16","summary":"Learn how to set up an ORM-based application with Spring Boot using Java, Kotlin, and Go (Gin). Includes PostgreSQL integration and basic CRUD operations.","thumbnail":"/images/orm-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"orm","name":"ORM","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"rest-api-input-validation","title":"Input Validation in REST APIs","date":"2024-12-15","summary":"Learn how to implement input validation in REST APIs using Java, Kotlin, and Go with frameworks like Spring Boot and Gin. Covers annotations, custom validators, and error handling.","thumbnail":"/images/input-validation-thumbnail.jpg","readingTime":"4 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"go","name":"Go","color":"brown"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"gin","name":"Gin","color":"green"},{"id":"validation","name":"Validation","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"spring-boot-graphql","title":"Building APIs with Spring for GraphQL","date":"2024-12-15","summary":"Learn how to build GraphQL APIs using Spring for GraphQL with Java and Kotlin. Includes schema creation, query handling, and integration.","thumbnail":"/images/spring-boot-graphql-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"graphql","name":"GraphQL","color":"pink"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"golang-gin-first-application","title":"Gin - First Application","date":"2024-12-14","summary":"A beginner-friendly guide to creating your first Golang Gin application from scratch. Learn the basics and start your journey with Gin.","thumbnail":"/images/golang-gin-first-app-thumbnail.jpg","readingTime":"1 min read","topics":[{"id":"go","name":"Go","color":"brown"},{"id":"gin","name":"Gin","color":"green"},{"id":"beginner-guide","name":"Beginner Guide","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]},{"id":"building-a-rest-api-with-spring-boot","title":"Building a REST API with Spring Boot","date":"2024-12-11","summary":"Learn how to create a REST API using Spring Boot. Includes HTTP methods, JSON handling, Lombok integration, and curl for testing.","thumbnail":"/images/spring-boot-rest-api-thumbnail.jpg","readingTime":"3 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"rest-api","name":"REST API","color":"blue"},{"id":"programming","name":"Programming","color":"orange"}]},{"id":"spring-boot-first-application","title":"Spring Boot - First Application","date":"2024-12-10","summary":"A beginner-friendly guide to creating your first Spring Boot application from scratch. Learn the basics and start your journey with Spring Boot.","thumbnail":"/images/spring-boot-first-app-thumbnail.jpg","readingTime":"2 min read","topics":[{"id":"java","name":"Java","color":"red"},{"id":"kotlin","name":"Kotlin","color":"purple"},{"id":"spring-boot","name":"Spring Boot","color":"green"},{"id":"beginner-guide","name":"Beginner Guide","color":"orange"},{"id":"programming","name":"Programming","color":"blue"}]}]},"__N_SSG":true}